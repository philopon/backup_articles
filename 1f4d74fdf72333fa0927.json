{"rendered_body": "<p>\u524d\u306e\u8a18\u4e8b <a href=\"http://qiita.com/philopon/items/99760c65bcc2d3fcc4c1\" class=\"autolink\" id=\"reference-6660db08e14cd86bcad2\">http://qiita.com/philopon/items/99760c65bcc2d3fcc4c1</a> \u3067\u306f\u5ba3\u4f1d\u306b\u7d42\u59cb\u3057\u305f\u306e\u3067\u3001\u5b9f\u88c5\u306b\u3064\u3044\u3066\u89e6\u308c\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002</p>\n\n<p>-- \u8133\u5185\u578b\u3042\u308f\u305b\u3057\u3066\u308b\u90e8\u5206\u304c\u3042\u308b\u306e\u3067\u3001\u578b\u304c\u5408\u308f\u306a\u304b\u3063\u305f\u3089ghc\u3088\u308a\u5206\u304b\u308a\u3084\u3059\u3044\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3067\u3053\u3063\u305d\u308a\u6559\u3048\u3066\u304f\u3060\u3055\u3044<br>\n-- \u7406\u89e3\u304c\u8ffd\u3044\u3064\u3044\u3066\u306a\u3044\u3068\u3053\u308d\u3082\u591a\u3005\u3042\u308b\u306e\u3067\u9593\u9055\u3048\u3066\u3044\u305f\u3089\u30c4\u30c3\u30b3\u30df\u304a\u9858\u3044\u3057\u307e\u3059\u3002</p>\n\n<h1>\n<span id=\"\u306f\u3058\u3081\u306b\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>\u306f\u3058\u3081\u306b</h1>\n\n<p>\u5b9f\u73fe\u3057\u305f\u3044\u3053\u3068\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"haskell\">\n<div class=\"code-lang\"><span class=\"bold\">\u76ee\u6a19</span></div>\n<div class=\"highlight\"><pre><span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"kr\">do</span>\n    <span class=\"n\">action</span> <span class=\"o\">$</span> <span class=\"kr\">do</span> <span class=\"c1\">-- \u30d5\u30a3\u30eb\u30bf\u3057\u306a\u3051\u308c\u30700\u5f15\u6570</span>\n        <span class=\"n\">doSomething</span>\n\n    <span class=\"n\">filterA</span> <span class=\"o\">$</span> <span class=\"kr\">do</span> <span class=\"c1\">-- \u30d5\u30a3\u30eb\u30bf\u3057\u3066\u7d50\u679c(Int)\u3092snoc</span>\n        <span class=\"n\">filterB</span> <span class=\"o\">$</span> <span class=\"kr\">do</span> <span class=\"c1\">-- \u30d5\u30a3\u30eb\u30bf\u3059\u308b\u304c\u7d50\u679c\u306f\u5909\u3048\u306a\u3044</span>\n            <span class=\"n\">filterC</span> <span class=\"o\">$</span> <span class=\"kr\">do</span>    <span class=\"c1\">--- \u30d5\u30a3\u30eb\u30bf\u3057\u3066\u7d50\u679c(Double\u3068String)\u3092snoc</span>\n\n                <span class=\"n\">action</span> <span class=\"o\">$</span> <span class=\"nf\">\\</span><span class=\"n\">int</span> <span class=\"n\">double</span> <span class=\"n\">string</span> <span class=\"o\">-&gt;</span> <span class=\"kr\">do</span>   <span class=\"c1\">-- 3\u3064\u306e\u5f15\u6570\u304c\u6e21\u3055\u308c\u308b\uff01</span>\n                    <span class=\"n\">doSomething</span>\n</pre></div>\n</div>\n\n<p>filter\u7fa4\u306fReader\u30e2\u30ca\u30c9\u306elocal\u95a2\u6570\u306e\u69d8\u306a\u51e6\u7406\u3067\u5b9f\u73fe\u51fa\u6765\u305d\u3046\u3067\u3059\u304c\u3001</p>\n\n<div class=\"code-frame\" data-lang=\"haskell\">\n<div class=\"code-lang\"><span class=\"bold\">\u64ec\u4f3c\u30b3\u30fc\u30c9</span></div>\n<div class=\"highlight\"><pre><span class=\"n\">filter</span> <span class=\"o\">::</span> <span class=\"p\">(</span><span class=\"err\">\u591a\u76f8\u30ea\u30b9\u30c8</span> <span class=\"o\">-&gt;</span> <span class=\"err\">\u591a\u76f8\u30ea\u30b9\u30c8</span><span class=\"sc\">')</span><span class=\"err\"> </span><span class=\"o\">-&gt;</span> <span class=\"kt\">Filter</span> <span class=\"err\">\u591a\u76f8\u30ea\u30b9\u30c8</span><span class=\"sc\">' </span><span class=\"err\">-</span><span class=\"o\">&gt;</span> <span class=\"kt\">Filter</span> <span class=\"err\">\u591a\u76f8\u30ea\u30b9\u30c8</span>\n</pre></div>\n</div>\n\n<p>action\u90e8\u5206\u3067\u306ffilter\u7fa4\u306e\u7d50\u679c\u306e\u591a\u76f8\u304b\u3064\u4efb\u610f\u306e\u9577\u3055\u306e\u30ea\u30b9\u30c8\u3092\u95a2\u6570\u306b\u9069\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002<br>\n\u3064\u307e\u308a\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u95a2\u6570\u3092\u5b9a\u7fa9\u3067\u304d\u308c\u3070\u4e0a\u8a18\u306e\u76ee\u6a19\u3092\u9054\u6210\u3067\u304d\u305d\u3046\u3067\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"haskell\">\n<div class=\"code-lang\"><span class=\"bold\">\u76ee\u6a19',\u64ec\u4f3c\u30b3\u30fc\u30c9</span></div>\n<div class=\"highlight\"><pre><span class=\"c1\">-- []\u306f\u591a\u76f8\u30ea\u30b9\u30c8</span>\n\n<span class=\"n\">apply</span> <span class=\"n\">doSomething1</span> <span class=\"kt\">[]</span> <span class=\"o\">=</span> <span class=\"n\">doSomething</span>\n<span class=\"n\">apply</span> <span class=\"n\">doSomething2</span> <span class=\"p\">[</span><span class=\"mi\">1</span> <span class=\"o\">::</span> <span class=\"kt\">Int</span><span class=\"p\">,</span> <span class=\"mi\">2</span> <span class=\"o\">::</span> <span class=\"kt\">String</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">doSomething</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span>\n</pre></div>\n</div>\n\n<p>\u4ee5\u4e0b\u306eGHC\u62e1\u5f35\u304c\u5fc5\u8981\u3067\u3059\u3002ghc7.4\u4ee5\u964d\u3067\u52d5\u304f\u3068\u601d\u3044\u307e\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"haskell\">\n<div class=\"code-lang\"><span class=\"bold\">haskell</span></div>\n<div class=\"highlight\"><pre><span class=\"cp\">{-# LANGUAGE KindSignatures #-}</span>\n<span class=\"cp\">{-# LANGUAGE DataKinds #-}</span>\n<span class=\"cp\">{-# LANGUAGE TypeOperators #-}</span>\n<span class=\"cp\">{-# LANGUAGE GADTs #-}</span>\n<span class=\"cp\">{-# LANGUAGE TypeFamilies #-}</span>\n<span class=\"cp\">{-# LANGUAGE UndecidableInstances #-}</span>\n</pre></div>\n</div>\n\n<h1>\n<span id=\"\u591a\u76f8\u30ea\u30b9\u30c8\u306e\u5b9a\u7fa9\" class=\"fragment\"></span><a href=\"#%E5%A4%9A%E7%9B%B8%E3%83%AA%E3%82%B9%E3%83%88%E3%81%AE%E5%AE%9A%E7%BE%A9\"><i class=\"fa fa-link\"></i></a>\u591a\u76f8\u30ea\u30b9\u30c8\u306e\u5b9a\u7fa9</h1>\n\n<p>\u307e\u305a\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u30ea\u30b9\u30c8(\u3067\u3044\u3044\u306e\u304b\u306a)\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"haskell\">\n<div class=\"code-lang\"><span class=\"bold\">haskell</span></div>\n<div class=\"highlight\"><pre><span class=\"kr\">data</span> <span class=\"kt\">SList</span> <span class=\"o\">::</span> <span class=\"p\">[</span><span class=\"o\">*</span><span class=\"p\">]</span> <span class=\"o\">-&gt;</span> <span class=\"o\">*</span> <span class=\"kr\">where</span>\n    <span class=\"kt\">SNil</span>  <span class=\"o\">::</span>                  <span class=\"kt\">SList</span> <span class=\"sc\">'[</span><span class=\"err\">]</span>\n    <span class=\"p\">(</span><span class=\"o\">:::</span><span class=\"p\">)</span> <span class=\"o\">::</span> <span class=\"n\">a</span> <span class=\"o\">-&gt;</span> <span class=\"kt\">SList</span> <span class=\"n\">xs</span> <span class=\"o\">-&gt;</span> <span class=\"kt\">SList</span> <span class=\"p\">(</span><span class=\"n\">a</span> <span class=\"sc\">':</span><span class=\"err\"> </span><span class=\"n\">xs</span><span class=\"p\">)</span>\n\n<span class=\"kr\">infixr</span> <span class=\"mi\">5</span> <span class=\"o\">:::</span>\n</pre></div>\n</div>\n\n<p>ghci\u3067\u8a66\u3057\u3066\u307f\u308b\u3068\u3001cons\u3057\u305f\u5024\u306e\u578b\u304cSList\u306e\u578b\u30ec\u30d9\u30eb\u30ea\u30b9\u30c8\u306b\u4fdd\u6301\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"ghci\">\n<div class=\"code-lang\"><span class=\"bold\">ghci</span></div>\n<div class=\"highlight\"><pre>&gt; :t SNil\nSList '[]\n&gt; :t (1::Int) ::: SNil\nSList '[Int]\n&gt; :t (\"foo\" :: String) ::: (1::Int) ::: SNil\nSList '[String,Int]\n</pre></div>\n</div>\n\n<h1>\n<span id=\"\u95a2\u6570\u306b\u9069\u7528\" class=\"fragment\"></span><a href=\"#%E9%96%A2%E6%95%B0%E3%81%AB%E9%81%A9%E7%94%A8\"><i class=\"fa fa-link\"></i></a>\u95a2\u6570\u306b\u9069\u7528</h1>\n\n<p>\u3053\u308c\u3092\u95a2\u6570\u306b\u9069\u7528\u3057\u305f\u3044\u306e\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u66f8\u304d\u307e\u3059\u304c\u3001\u3053\u306e\u307e\u307e\u3067\u306f\u578b\u304c\u5408\u308f\u305a\u3001\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"haskell\">\n<div class=\"code-lang\"><span class=\"bold\">haskell</span></div>\n<div class=\"highlight\"><pre><span class=\"n\">apply</span> <span class=\"n\">v</span> <span class=\"kt\">SNil</span> <span class=\"o\">=</span> <span class=\"n\">v</span>\n<span class=\"n\">apply</span> <span class=\"n\">f</span> <span class=\"p\">(</span><span class=\"n\">a</span> <span class=\"o\">:::</span> <span class=\"n\">as</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">apply</span> <span class=\"p\">(</span><span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"n\">as</span>\n</pre></div>\n</div>\n\n<p>\u7b2c\u4e00\u5f15\u6570\u306b\u306f\u4efb\u610f\u306e\u6570\u306e\u5f15\u6570\u3092\u53d6\u308b\u95a2\u6570\u304c\u5165\u308a\u3001\u305d\u306e\u307e\u307e\u3067\u306f\u578b\u3092\u66f8\u3051\u306a\u3044\u305f\u3081\u3067\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"haskell\">\n<div class=\"code-lang\"><span class=\"bold\">\u64ec\u4f3c\u30b3\u30fc\u30c9</span></div>\n<div class=\"highlight\"><pre><span class=\"n\">apply</span> <span class=\"o\">::</span> <span class=\"o\">??</span> <span class=\"o\">-&gt;</span> <span class=\"kt\">SList</span> <span class=\"n\">as</span> <span class=\"o\">-&gt;</span> <span class=\"n\">r</span>    <span class=\"c1\">-- ?? \u306b\u306f\u4efb\u610f\u306e\u500b\u6570/\u578b\u306e\u5f15\u6570\u3092\u6301\u3064\u95a2\u6570\u304c\u5165\u308b</span>\n</pre></div>\n</div>\n\n<p>\u3057\u304b\u3057\u3001\u7b2c\u4e8c\u5f15\u6570\u306e\u30ea\u30b9\u30c8\u3068\u623b\u308a\u5024\u306b\u578b\u306e\u60c5\u5831\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u3053\u304b\u3089\u7b2c\u4e00\u5f15\u6570\u306e\u578b\u3092\u5c0e\u3051\u3070\u826f\u3044\u306e\u3067\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"haskell\">\n<div class=\"code-lang\"><span class=\"bold\">\u64ec\u4f3c\u30b3\u30fc\u30c9</span></div>\n<div class=\"highlight\"><pre><span class=\"n\">applyA</span> <span class=\"o\">::</span> <span class=\"o\">??</span> <span class=\"o\">-&gt;</span> <span class=\"kt\">SList</span> <span class=\"sc\">'[</span><span class=\"err\">I</span><span class=\"n\">nt</span><span class=\"p\">,</span><span class=\"kt\">Int</span><span class=\"p\">]</span> <span class=\"o\">-&gt;</span> <span class=\"kt\">Int</span> <span class=\"c1\">-- \u306a\u3089\u3070??\u306fInt -&gt; Int -&gt; Int\u3068\u306a\u308b\u3002</span>\n</pre></div>\n</div>\n\n<p>\u578b\u3092\u8fd4\u3059\u95a2\u6570\u306f\u578b\u65cf(type family)\u3067\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u95a2\u6570\u306e\u7b2c\u4e00\u5f15\u6570\u3092\u6e80\u8db3\u3055\u305b\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3059\u308c\u3070\u826f\u3055\u305d\u3046\u3067\u3059\u306d\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"haskell\">\n<div class=\"code-lang\"><span class=\"bold\">haskell</span></div>\n<div class=\"highlight\"><pre><span class=\"kr\">type</span> <span class=\"n\">family</span> <span class=\"kt\">Fn</span> <span class=\"p\">(</span><span class=\"n\">as</span> <span class=\"o\">::</span> <span class=\"p\">[</span><span class=\"o\">*</span><span class=\"p\">])</span> <span class=\"n\">r</span>\n<span class=\"kr\">type</span> <span class=\"kr\">instance</span> <span class=\"kt\">Fn</span> <span class=\"sc\">'[</span><span class=\"err\">]</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">r</span>\n<span class=\"kr\">type</span> <span class=\"kr\">instance</span> <span class=\"kt\">Fn</span> <span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"sc\">':</span><span class=\"err\"> </span><span class=\"n\">xs</span><span class=\"p\">)</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">x</span> <span class=\"o\">-&gt;</span> <span class=\"kt\">Fn</span> <span class=\"n\">xs</span> <span class=\"n\">r</span>\n</pre></div>\n</div>\n\n<p>\u3053\u308c\u3092\u7528\u3044\u3066\u3001\u4e0a\u8a18\u306e\u4f8b\u306b\u578b\u30b7\u30b0\u30cb\u30c1\u30e3\u3092\u8ffd\u52a0\u3057\u3066\u3042\u3052\u308c\u3070</p>\n\n<div class=\"code-frame\" data-lang=\"haskell\">\n<div class=\"code-lang\"><span class=\"bold\">haskell</span></div>\n<div class=\"highlight\"><pre><span class=\"n\">apply</span> <span class=\"o\">::</span> <span class=\"kt\">Fn</span> <span class=\"n\">xs</span> <span class=\"n\">r</span> <span class=\"o\">-&gt;</span> <span class=\"kt\">SList</span> <span class=\"n\">xs</span> <span class=\"o\">-&gt;</span> <span class=\"n\">r</span>\n</pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"haskell\">\n<div class=\"code-lang\"><span class=\"bold\">\u624b\u52d5\u7c21\u7d04</span></div>\n<div class=\"highlight\"><pre><span class=\"n\">apply</span> <span class=\"p\">(</span><span class=\"o\">+</span><span class=\"p\">)</span> <span class=\"p\">((</span><span class=\"mi\">1</span><span class=\"o\">::</span><span class=\"kt\">Int</span><span class=\"p\">)</span> <span class=\"o\">:::</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"o\">::</span><span class=\"kt\">Int</span><span class=\"p\">)</span> <span class=\"o\">:::</span> <span class=\"kt\">SNil</span><span class=\"p\">)</span>\n\n<span class=\"cm\">{- \u7b2c\u4e00\u5f15\u6570 :: Fn '[Int,Int] r\n    = (Int -&gt; Fn '[Int] r)\n    = (Int -&gt; Int -&gt; Fn '[] r)\n    = (Int -&gt; Int -&gt; r)\n\n    (+)\u3068\u578b\u304c\u5408\u3046\uff01-}</span>\n\n<span class=\"o\">=</span> <span class=\"n\">apply</span> <span class=\"p\">((</span><span class=\"o\">+</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">::</span><span class=\"kt\">Int</span><span class=\"p\">))</span> <span class=\"p\">((</span><span class=\"mi\">2</span><span class=\"o\">::</span><span class=\"kt\">Int</span><span class=\"p\">)</span> <span class=\"o\">:::</span> <span class=\"kt\">SNil</span><span class=\"p\">)</span>\n\n<span class=\"c1\">-- \u7b2c\u4e00\u5f15\u6570 :: Fn '[Int] r = (Int -&gt; r)</span>\n\n<span class=\"o\">=</span> <span class=\"n\">apply</span> <span class=\"p\">((</span><span class=\"o\">+</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">::</span><span class=\"kt\">Int</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"o\">::</span><span class=\"kt\">Int</span><span class=\"p\">))</span> <span class=\"kt\">SNil</span>\n\n<span class=\"c1\">-- \u7b2c\u4e00\u5f15\u6570 :: Fn '[] r = r</span>\n\n<span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"o\">+</span><span class=\"p\">)</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"o\">=</span> <span class=\"mi\">3</span>\n</pre></div>\n</div>\n\n<p>\u3068\u8a00\u3046\u98a8\u306b\u3061\u3083\u3093\u3068\u578b\u3092\u4ed8\u3051\u3089\u308c\u308b\u306e\u3067\u4e0a\u624b\u304f\u3044\u304d\u307e\u3059\u3002</p>\n\n<p>\u4ed6\u306b\u3082\u5b9f\u884c\u4f8b\u3092\u6319\u3052\u3066\u304a\u304d\u307e\u3059</p>\n\n<div class=\"code-frame\" data-lang=\"ghci\">\n<div class=\"code-lang\"><span class=\"bold\">ghci</span></div>\n<div class=\"highlight\"><pre>&gt; apply (+) (3 ::: SNil) (8::Int) -- \u7b2c\u4e00\u5f15\u6570\u306e\u307f\u3092\u30ea\u30b9\u30c8\u304b\u3089\u9069\u7528\u3001(Num a =&gt; a -&gt; a)\u3092\u8fd4\u3057\u3001\u666e\u901a\u306bInt\u3092\u9069\u7528\n11\n&gt; apply (+) (3 ::: 7 ::: 8 ::: SNil) -- \u6570\u5b57\u306b\u6570\u5b57\u3092\u9069\u7528\u3057\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u5f53\u7136\u30a8\u30e9\u30fc\n\n&lt;interactive&gt;:6:1:\n    Could not deduce (Num (a0 -&gt; r))\n      arising from the ambiguity check for \u2018it\u2019\n    from the context (Num (a -&gt; r), Num a)\n      bound by the inferred type for \u2018it\u2019: (Num (a -&gt; r), Num a) =&gt; r\n      at &lt;interactive&gt;:6:1-34\n    The type variable \u2018a0\u2019 is ambiguous\n    When checking that \u2018it\u2019\n      has the inferred type \u2018forall r a. (Num (a -&gt; r), Num a) =&gt; r\u2019\n    Probable cause: the inferred type is ambiguous\n</pre></div>\n</div>\n\n<p>\u3053\u308c\u3067\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u30ea\u30b9\u30c8\u3092\u95a2\u6570\u306b\u9069\u7528\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff01</p>\n\n<p>Snoc\u95a2\u6570\u3082\u5b9a\u7fa9\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\u3069\u3061\u3089\u3082</p>\n\n<div class=\"code-frame\" data-lang=\"haskell\">\n<div class=\"code-lang\"><span class=\"bold\">haskell</span></div>\n<div class=\"highlight\"><pre><span class=\"kr\">type</span> <span class=\"n\">family</span> <span class=\"kt\">Snoc</span> <span class=\"p\">(</span><span class=\"n\">as</span> <span class=\"o\">::</span> <span class=\"p\">[</span><span class=\"o\">*</span><span class=\"p\">])</span> <span class=\"n\">a</span> <span class=\"o\">::</span> <span class=\"p\">[</span><span class=\"o\">*</span><span class=\"p\">]</span>\n<span class=\"kr\">type</span> <span class=\"kr\">instance</span> <span class=\"kt\">Snoc</span> <span class=\"sc\">'[</span><span class=\"err\">]</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">a</span> <span class=\"sc\">':</span><span class=\"err\"> </span><span class=\"sc\">'[</span><span class=\"err\">]</span>\n<span class=\"kr\">type</span> <span class=\"kr\">instance</span> <span class=\"kt\">Snoc</span> <span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"sc\">':</span><span class=\"err\"> </span><span class=\"n\">xs</span><span class=\"p\">)</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">x</span> <span class=\"sc\">':</span><span class=\"err\"> </span><span class=\"kt\">Snoc</span> <span class=\"n\">xs</span> <span class=\"n\">a</span>\n\n<span class=\"n\">sSnoc</span> <span class=\"o\">::</span> <span class=\"kt\">SList</span> <span class=\"n\">as</span> <span class=\"o\">-&gt;</span> <span class=\"n\">a</span> <span class=\"o\">-&gt;</span> <span class=\"kt\">SList</span> <span class=\"p\">(</span><span class=\"kt\">Snoc</span> <span class=\"n\">as</span> <span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"n\">sSnoc</span> <span class=\"kt\">SNil</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">a</span> <span class=\"o\">:::</span> <span class=\"kt\">SNil</span>\n<span class=\"n\">sSnoc</span> <span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">:::</span> <span class=\"n\">xs</span><span class=\"p\">)</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">x</span> <span class=\"o\">:::</span> <span class=\"n\">sSnoc</span> <span class=\"n\">xs</span> <span class=\"n\">a</span>\n</pre></div>\n</div>\n\n<p>\u578b\u304c\u3061\u3083\u3093\u3068\u4ed8\u304f\u304b\u8ffd\u3063\u3066\u307f\u307e\u3057\u3087\u3046</p>\n\n<div class=\"code-frame\" data-lang=\"haskell\">\n<div class=\"code-lang\"><span class=\"bold\">\u624b\u52d5\u7c21\u7d04</span></div>\n<div class=\"highlight\"><pre><span class=\"err\">\u4f8b</span><span class=\"o\">:</span> <span class=\"n\">sSnoc</span> <span class=\"p\">(</span><span class=\"mi\">13</span> <span class=\"o\">:::</span> <span class=\"s\">\"t\"</span> <span class=\"o\">:::</span> <span class=\"kt\">SNil</span><span class=\"p\">)</span> <span class=\"mf\">4.1</span>\n\n<span class=\"cm\">{- \u623b\u308a\u5024: SList (Snoc '[Int, String] Double)\n= SList (Int ': Snoc '[String] Double)\n= SList (Int ': String ': Snoc '[] Double)\n= SList (Int ': String ': '[Double])\n\n-- \u672b\u5c3e\u306bDouble\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u308b\uff01\n-}</span>\n\n<span class=\"o\">=</span> <span class=\"mi\">13</span> <span class=\"o\">:::</span> <span class=\"n\">sSnoc</span> <span class=\"p\">(</span><span class=\"s\">\"t\"</span> <span class=\"o\">:::</span> <span class=\"kt\">SNil</span><span class=\"p\">)</span> <span class=\"mf\">4.1</span>\n\n<span class=\"c1\">-- \u623b\u308a\u5024: SList (Snoc '[String] Double) = SList (String ': '[Double])</span>\n\n<span class=\"o\">=</span> <span class=\"mi\">13</span> <span class=\"o\">:::</span> <span class=\"s\">\"t\"</span> <span class=\"o\">:::</span> <span class=\"n\">sSnoc</span> <span class=\"kt\">SNil</span> <span class=\"mf\">4.1</span>\n\n<span class=\"c1\">-- \u623b\u308a\u5024: SList (Snoc '[] Double) = SList '[Double]</span>\n\n<span class=\"o\">=</span> <span class=\"mi\">13</span> <span class=\"o\">:::</span> <span class=\"s\">\"t\"</span> <span class=\"o\">:::</span> <span class=\"mf\">4.1</span> <span class=\"o\">:::</span> <span class=\"kt\">SNil</span>\n</pre></div>\n</div>\n\n<p>\u3061\u3083\u3093\u3068\u578b\u304c\u4ed8\u3044\u3066\u3044\u307e\u3059\u306d\u3002<br>\n(\u5f53\u7136\u3067\u3059\u304c)\u578b\u95a2\u6570\u3068\u95a2\u6570\u304c\u5168\u304f\u540c\u3058\u5f62\u3092\u3057\u3066\u3044\u308b\u306e\u3082\u9762\u767d\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002</p>\n\n<h1>\n<span id=\"constraint\u30ab\u30a4\u30f3\u30c9\" class=\"fragment\"></span><a href=\"#constraint%E3%82%AB%E3%82%A4%E3%83%B3%E3%83%89\"><i class=\"fa fa-link\"></i></a>Constraint\u30ab\u30a4\u30f3\u30c9</h1>\n\n<p>\u3053\u308c\u3067\u3084\u308a\u305f\u3044\u3053\u3068\u306f\u5b9f\u73fe\u51fa\u6765\u305f\u306e\u3067\u3059\u304c\u3001SList\u306fShow\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u306e\u3067\u3001\u5f53\u7136show\u3059\u308b\u4e8b\u304c\u51fa\u6765\u305a\u3001\u30c7\u30d0\u30c3\u30b0\u3068\u304b\u3067\u3061\u3087\u3063\u3068\u56f0\u308a\u307e\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"ghci\">\n<div class=\"code-lang\"><span class=\"bold\">ghci</span></div>\n<div class=\"highlight\"><pre>(3::Int) ::: SNil\n\n&lt;interactive&gt;:3:1:\n    No instance for (Show (SList '[Int])) arising from a use of \u2018print\u2019\n    In a stmt of an interactive GHCi command: print it\n</pre></div>\n</div>\n\n<p>\u30b3\u30ec\u3092Show\u306einstance\u306b\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001\u30ea\u30b9\u30c8\u5185\u306e\u5168\u3066\u306e\u8981\u7d20\u304cShow\u306einstance\u3067\u3042\u308b\u3053\u3068\u3092\u8868\u3055\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002</p>\n\n<p>\u3053\u306e\u3088\u3046\u306a\u5236\u7d04\u3092\u4ed8\u3051\u308b\u305f\u3081\u306b\u306fConstraint\u30ab\u30a4\u30f3\u30c9\u3092\u7528\u3044\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002</p>\n\n<p>\u524d\u6e96\u5099\u3068\u3057\u3066\u66f4\u306b\u62e1\u5f35\u3092\u8ffd\u52a0\u3057\u3001Constraint\u3092import\u3057\u307e\u3057\u3087\u3046</p>\n\n<div class=\"code-frame\" data-lang=\"hakell\">\n<div class=\"code-lang\"><span class=\"bold\">haskell</span></div>\n<div class=\"highlight\"><pre>{-# LANGUAGE ConstraintKinds #-}\n{-# LANGUAGE StandaloneDeriving #-}\n\nimport GHC.Exts(Constraint)\n</pre></div>\n</div>\n\n<p>Constraint\u30ab\u30a4\u30f3\u30c9\u306f\u8907\u6570\u306e\u5236\u7d04\u3092\u30bf\u30d7\u30eb\u3067\u8868\u3057\u307e\u3059\u3002<br>\n\u30ea\u30b9\u30c8\u4e2d\u306e\u5168\u3066\u306e\u8981\u7d20\u306b\u5bfe\u3059\u308b\u5236\u7d04\u306f\u4ee5\u4e0b\u306e\u69d8\u306b\u66f8\u3051\u307e\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"haskell\">\n<div class=\"code-lang\"><span class=\"bold\">haskell</span></div>\n<div class=\"highlight\"><pre><span class=\"kr\">type</span> <span class=\"n\">family</span> <span class=\"kt\">All</span> <span class=\"p\">(</span><span class=\"n\">c</span> <span class=\"o\">::</span> <span class=\"o\">*</span> <span class=\"o\">-&gt;</span> <span class=\"kt\">Constraint</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"n\">as</span> <span class=\"o\">::</span> <span class=\"p\">[</span><span class=\"o\">*</span><span class=\"p\">])</span> <span class=\"o\">::</span> <span class=\"kt\">Constraint</span>\n<span class=\"kr\">type</span> <span class=\"kr\">instance</span> <span class=\"kt\">All</span> <span class=\"n\">c</span> <span class=\"sc\">'[</span><span class=\"err\">]</span> <span class=\"o\">=</span> <span class=\"nb\">()</span>\n<span class=\"kr\">type</span> <span class=\"kr\">instance</span> <span class=\"kt\">All</span> <span class=\"n\">c</span> <span class=\"p\">(</span><span class=\"n\">a</span> <span class=\"sc\">':</span><span class=\"err\"> </span><span class=\"n\">as</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">c</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"kt\">All</span> <span class=\"n\">c</span> <span class=\"n\">as</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<p>\u578b\u3092\u5408\u308f\u305b\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"haskell\">\n<div class=\"code-lang\"><span class=\"bold\">\u624b\u52d5\u7c21\u7d04</span></div>\n<div class=\"highlight\"><pre><span class=\"kt\">All</span> <span class=\"kt\">Show</span> <span class=\"sc\">'[</span><span class=\"err\">I</span><span class=\"n\">nt</span><span class=\"p\">,</span> <span class=\"kt\">Double</span><span class=\"p\">]</span>\n<span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"kt\">Show</span> <span class=\"kt\">Int</span><span class=\"p\">,</span> <span class=\"kt\">All</span> <span class=\"kt\">Show</span> <span class=\"sc\">'[</span><span class=\"err\">D</span><span class=\"n\">ouble</span><span class=\"p\">])</span>\n<span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"kt\">Show</span> <span class=\"kt\">Int</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"kt\">Show</span> <span class=\"kt\">Double</span><span class=\"p\">,</span> <span class=\"kt\">All</span> <span class=\"kt\">Show</span> <span class=\"sc\">'[</span><span class=\"err\">]</span><span class=\"p\">)</span>\n<span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"kt\">Show</span> <span class=\"kt\">Int</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"kt\">Show</span> <span class=\"kt\">Double</span><span class=\"p\">,</span> <span class=\"nb\">()</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n\n<p>\u3053\u306e\u3088\u3046\u306b\u3001\u8981\u7d20\u4e2d\u306e\u5168\u3066\u306e\u8981\u7d20(Int,Double)\u306b\u5bfe\u3057\u3066Show\u5236\u7d04\u3092\u4ed8\u3051\u3089\u308c\u307e\u3057\u305f\uff01</p>\n\n<p>\u3042\u3068\u306f\u3053\u308c\u3092\u7528\u3044\u3066Show instance\u3092\u5c0e\u51fa\u3059\u308c\u3070</p>\n\n<div class=\"code-frame\" data-lang=\"haskell\">\n<div class=\"code-lang\"><span class=\"bold\">haskell</span></div>\n<div class=\"highlight\"><pre><span class=\"kr\">deriving</span> <span class=\"kr\">instance</span> <span class=\"kt\">All</span> <span class=\"kt\">Show</span> <span class=\"n\">as</span> <span class=\"o\">=&gt;</span> <span class=\"kt\">Show</span> <span class=\"p\">(</span><span class=\"kt\">SList</span> <span class=\"n\">as</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"ghci\">\n<div class=\"code-lang\"><span class=\"bold\">ghci</span></div>\n<div class=\"highlight\"><pre>&gt; (\"test\"::String) ::: (3::Int) ::: SNil\n\"test\" ::: (3 ::: SNil)\n</pre></div>\n</div>\n\n<p>\u3053\u306e\u3088\u3046\u306b\u3061\u3083\u3093\u3068show\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff01</p>\n\n<h1>\n<span id=\"\u304a\u308f\u308a\u306b\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>\u304a\u308f\u308a\u306b</h1>\n\n<p>\u578b\u30ec\u30d9\u30eb\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3001\u53c2\u8003\u8a18\u4e8b\u8aad\u3093\u3067\u4ee5\u6765\u3001\u3059\u3052\u30fc\u304b\u3063\u3053\u3044\u3044\u611f\u3058\u3060\u3057\u4f7f\u3063\u3066\u307f\u305f\u3044\u306a\u30fc\u3063\u3066\u601d\u3063\u3066\u3044\u305f\u3082\u306e\u306e\u3001\u30a4\u30de\u30a4\u30c1\u4f7f\u3044\u3069\u3053\u308d\u304c\u308f\u304b\u3089\u305a\u30a2\u30ec\u3060\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u521d\u3081\u3066\u4fbf\u5229\u3063\u307d\u304f\u4f7f\u3046\u4e8b\u304c\u51fa\u6765\u305f\u3068\u601d\u3044\u307e\u3059\u3002</p>\n\n<p>\u5185\u5bb9\u7684\u306b\u306f\u5168\u3066\u53c2\u8003\u8a18\u4e8b\u306b\u66f8\u3044\u3066\u3042\u308b\u3053\u3068\u306a\u306e\u3067\u3001\u53c2\u8003\u8a18\u4e8b\u3092\u8aad\u307f\u307e\u3057\u3087\u3046\uff01</p>\n\n<h1>\n<span id=\"\u53c2\u8003\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83\"><i class=\"fa fa-link\"></i></a>\u53c2\u8003</h1>\n\n<p><a href=\"http://blog.konn-san.com/article/20120606/promoted-types-and-list-arguments\" rel=\"nofollow noopener\" target=\"_blank\">GHC 7.4.1 \u306e\u578b\u30ec\u30d9\u30eb\u65b0\u6a5f\u80fd\u3092\u4f7f\u3044\u5012\u3059 \u301cGADTs\u3001\u578b\u65cf \u3068 DataKinds\u3001ConstraintKinds \u306e\u5186\u74b0\u301c - \u3053\u308c\u306f\u570f\u3067\u3059</a></p>\n", "body": "\n\u524d\u306e\u8a18\u4e8b http://qiita.com/philopon/items/99760c65bcc2d3fcc4c1 \u3067\u306f\u5ba3\u4f1d\u306b\u7d42\u59cb\u3057\u305f\u306e\u3067\u3001\u5b9f\u88c5\u306b\u3064\u3044\u3066\u89e6\u308c\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n-- \u8133\u5185\u578b\u3042\u308f\u305b\u3057\u3066\u308b\u90e8\u5206\u304c\u3042\u308b\u306e\u3067\u3001\u578b\u304c\u5408\u308f\u306a\u304b\u3063\u305f\u3089ghc\u3088\u308a\u5206\u304b\u308a\u3084\u3059\u3044\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3067\u3053\u3063\u305d\u308a\u6559\u3048\u3066\u304f\u3060\u3055\u3044\n-- \u7406\u89e3\u304c\u8ffd\u3044\u3064\u3044\u3066\u306a\u3044\u3068\u3053\u308d\u3082\u591a\u3005\u3042\u308b\u306e\u3067\u9593\u9055\u3048\u3066\u3044\u305f\u3089\u30c4\u30c3\u30b3\u30df\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n\n\u306f\u3058\u3081\u306b\n==\n\n\u5b9f\u73fe\u3057\u305f\u3044\u3053\u3068\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n```haskell:\u76ee\u6a19\napp = do\n\taction $ do\t-- \u30d5\u30a3\u30eb\u30bf\u3057\u306a\u3051\u308c\u30700\u5f15\u6570\n\t\tdoSomething\n\n\tfilterA $ do -- \u30d5\u30a3\u30eb\u30bf\u3057\u3066\u7d50\u679c(Int)\u3092snoc\n\t\tfilterB $ do -- \u30d5\u30a3\u30eb\u30bf\u3059\u308b\u304c\u7d50\u679c\u306f\u5909\u3048\u306a\u3044\n\t\t\tfilterC $ do\t--- \u30d5\u30a3\u30eb\u30bf\u3057\u3066\u7d50\u679c(Double\u3068String)\u3092snoc\n\n\t\t\t\taction $ \\int double string -> do\t-- 3\u3064\u306e\u5f15\u6570\u304c\u6e21\u3055\u308c\u308b\uff01\n\t\t\t\t\tdoSomething\n```\n\nfilter\u7fa4\u306fReader\u30e2\u30ca\u30c9\u306elocal\u95a2\u6570\u306e\u69d8\u306a\u51e6\u7406\u3067\u5b9f\u73fe\u51fa\u6765\u305d\u3046\u3067\u3059\u304c\u3001\n\n```haskell:\u64ec\u4f3c\u30b3\u30fc\u30c9\nfilter :: (\u591a\u76f8\u30ea\u30b9\u30c8 -> \u591a\u76f8\u30ea\u30b9\u30c8') -> Filter \u591a\u76f8\u30ea\u30b9\u30c8' -> Filter \u591a\u76f8\u30ea\u30b9\u30c8\n```\n\naction\u90e8\u5206\u3067\u306ffilter\u7fa4\u306e\u7d50\u679c\u306e\u591a\u76f8\u304b\u3064\u4efb\u610f\u306e\u9577\u3055\u306e\u30ea\u30b9\u30c8\u3092\u95a2\u6570\u306b\u9069\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u95a2\u6570\u3092\u5b9a\u7fa9\u3067\u304d\u308c\u3070\u4e0a\u8a18\u306e\u76ee\u6a19\u3092\u9054\u6210\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n\n```haskell:\u76ee\u6a19',\u64ec\u4f3c\u30b3\u30fc\u30c9\n-- []\u306f\u591a\u76f8\u30ea\u30b9\u30c8\n\napply doSomething1 [] = doSomething\napply doSomething2 [1 :: Int, 2 :: String] = doSomething 1 2\n```\n\n\n\u4ee5\u4e0b\u306eGHC\u62e1\u5f35\u304c\u5fc5\u8981\u3067\u3059\u3002ghc7.4\u4ee5\u964d\u3067\u52d5\u304f\u3068\u601d\u3044\u307e\u3059\u3002\n\n```haskell:haskell\n{-# LANGUAGE KindSignatures #-}\n{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE TypeOperators #-}\n{-# LANGUAGE GADTs #-}\n{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE UndecidableInstances #-}\n```\n\n\u591a\u76f8\u30ea\u30b9\u30c8\u306e\u5b9a\u7fa9\n===\n\u307e\u305a\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u30ea\u30b9\u30c8(\u3067\u3044\u3044\u306e\u304b\u306a)\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```haskell:haskell\ndata SList :: [*] -> * where\n    SNil  ::                  SList '[]\n\t(:::) :: a -> SList xs -> SList (a ': xs)\n\ninfixr 5 :::\n```\n\nghci\u3067\u8a66\u3057\u3066\u307f\u308b\u3068\u3001cons\u3057\u305f\u5024\u306e\u578b\u304cSList\u306e\u578b\u30ec\u30d9\u30eb\u30ea\u30b9\u30c8\u306b\u4fdd\u6301\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n```ghci:ghci\n> :t SNil\nSList '[]\n> :t (1::Int) ::: SNil\nSList '[Int]\n> :t (\"foo\" :: String) ::: (1::Int) ::: SNil\nSList '[String,Int]\n```\n\n\u95a2\u6570\u306b\u9069\u7528\n====\n\n\u3053\u308c\u3092\u95a2\u6570\u306b\u9069\u7528\u3057\u305f\u3044\u306e\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u66f8\u304d\u307e\u3059\u304c\u3001\u3053\u306e\u307e\u307e\u3067\u306f\u578b\u304c\u5408\u308f\u305a\u3001\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\n\n```haskell:haskell\napply v SNil = v\napply f (a ::: as) = apply (f a) as\n```\n\n\u7b2c\u4e00\u5f15\u6570\u306b\u306f\u4efb\u610f\u306e\u6570\u306e\u5f15\u6570\u3092\u53d6\u308b\u95a2\u6570\u304c\u5165\u308a\u3001\u305d\u306e\u307e\u307e\u3067\u306f\u578b\u3092\u66f8\u3051\u306a\u3044\u305f\u3081\u3067\u3059\u3002\n\n```haskell:\u64ec\u4f3c\u30b3\u30fc\u30c9\napply :: ?? -> SList as -> r\t-- ?? \u306b\u306f\u4efb\u610f\u306e\u500b\u6570/\u578b\u306e\u5f15\u6570\u3092\u6301\u3064\u95a2\u6570\u304c\u5165\u308b\n```\n\n\u3057\u304b\u3057\u3001\u7b2c\u4e8c\u5f15\u6570\u306e\u30ea\u30b9\u30c8\u3068\u623b\u308a\u5024\u306b\u578b\u306e\u60c5\u5831\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u3053\u304b\u3089\u7b2c\u4e00\u5f15\u6570\u306e\u578b\u3092\u5c0e\u3051\u3070\u826f\u3044\u306e\u3067\u3059\u3002\n\n```haskell:\u64ec\u4f3c\u30b3\u30fc\u30c9\napplyA :: ?? -> SList '[Int,Int] -> Int\t-- \u306a\u3089\u3070??\u306fInt -> Int -> Int\u3068\u306a\u308b\u3002\n```\n\n\u578b\u3092\u8fd4\u3059\u95a2\u6570\u306f\u578b\u65cf(type family)\u3067\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u95a2\u6570\u306e\u7b2c\u4e00\u5f15\u6570\u3092\u6e80\u8db3\u3055\u305b\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3059\u308c\u3070\u826f\u3055\u305d\u3046\u3067\u3059\u306d\u3002\n\n```haskell:haskell\ntype family Fn (as :: [*]) r\ntype instance Fn '[] r = r\ntype instance Fn (x ': xs) r = x -> Fn xs r\n```\n\n\u3053\u308c\u3092\u7528\u3044\u3066\u3001\u4e0a\u8a18\u306e\u4f8b\u306b\u578b\u30b7\u30b0\u30cb\u30c1\u30e3\u3092\u8ffd\u52a0\u3057\u3066\u3042\u3052\u308c\u3070\n\n```haskell:haskell\napply :: Fn xs r -> SList xs -> r\n```\n\n```haskell:\u624b\u52d5\u7c21\u7d04\napply (+) ((1::Int) ::: (2::Int) ::: SNil)\n\n{- \u7b2c\u4e00\u5f15\u6570 :: Fn '[Int,Int] r\n\t= (Int -> Fn '[Int] r)\n\t= (Int -> Int -> Fn '[] r)\n\t= (Int -> Int -> r)\n\n\t(+)\u3068\u578b\u304c\u5408\u3046\uff01-}\n\n= apply ((+) (1::Int)) ((2::Int) ::: SNil)\n\n-- \u7b2c\u4e00\u5f15\u6570 :: Fn '[Int] r = (Int -> r)\n\n= apply ((+) (1::Int) (2::Int)) SNil\n\n-- \u7b2c\u4e00\u5f15\u6570 :: Fn '[] r = r\n\n= ((+) 1 2)\n\n= 3\n```\n\n\u3068\u8a00\u3046\u98a8\u306b\u3061\u3083\u3093\u3068\u578b\u3092\u4ed8\u3051\u3089\u308c\u308b\u306e\u3067\u4e0a\u624b\u304f\u3044\u304d\u307e\u3059\u3002\n\n\u4ed6\u306b\u3082\u5b9f\u884c\u4f8b\u3092\u6319\u3052\u3066\u304a\u304d\u307e\u3059\n\n```ghci:ghci\n> apply (+) (3 ::: SNil) (8::Int) -- \u7b2c\u4e00\u5f15\u6570\u306e\u307f\u3092\u30ea\u30b9\u30c8\u304b\u3089\u9069\u7528\u3001(Num a => a -> a)\u3092\u8fd4\u3057\u3001\u666e\u901a\u306bInt\u3092\u9069\u7528\n11\n> apply (+) (3 ::: 7 ::: 8 ::: SNil) -- \u6570\u5b57\u306b\u6570\u5b57\u3092\u9069\u7528\u3057\u3088\u3046\u3068\u3059\u308b\u305f\u3081\u5f53\u7136\u30a8\u30e9\u30fc\n\n<interactive>:6:1:\n    Could not deduce (Num (a0 -> r))\n      arising from the ambiguity check for \u2018it\u2019\n    from the context (Num (a -> r), Num a)\n      bound by the inferred type for \u2018it\u2019: (Num (a -> r), Num a) => r\n      at <interactive>:6:1-34\n    The type variable \u2018a0\u2019 is ambiguous\n    When checking that \u2018it\u2019\n      has the inferred type \u2018forall r a. (Num (a -> r), Num a) => r\u2019\n    Probable cause: the inferred type is ambiguous\n```\n\n\u3053\u308c\u3067\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u30ea\u30b9\u30c8\u3092\u95a2\u6570\u306b\u9069\u7528\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff01\n\nSnoc\u95a2\u6570\u3082\u5b9a\u7fa9\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\u3069\u3061\u3089\u3082\n\n```haskell:haskell\ntype family Snoc (as :: [*]) a :: [*]\ntype instance Snoc '[] a = a ': '[]\ntype instance Snoc (x ': xs) a = x ': Snoc xs a\n\nsSnoc :: SList as -> a -> SList (Snoc as a)\nsSnoc SNil a = a ::: SNil\nsSnoc (x ::: xs) a = x ::: sSnoc xs a\n```\n\n\u578b\u304c\u3061\u3083\u3093\u3068\u4ed8\u304f\u304b\u8ffd\u3063\u3066\u307f\u307e\u3057\u3087\u3046\n\n```haskell:\u624b\u52d5\u7c21\u7d04\n\u4f8b: sSnoc (13 ::: \"t\" ::: SNil) 4.1\n\n{- \u623b\u308a\u5024: SList (Snoc '[Int, String] Double)\n= SList (Int ': Snoc '[String] Double)\n= SList (Int ': String ': Snoc '[] Double)\n= SList (Int ': String ': '[Double])\n\n-- \u672b\u5c3e\u306bDouble\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u308b\uff01\n-}\n\n= 13 ::: sSnoc (\"t\" ::: SNil) 4.1\n\n-- \u623b\u308a\u5024: SList (Snoc '[String] Double) = SList (String ': '[Double])\n\n= 13 ::: \"t\" ::: sSnoc SNil 4.1\n\n-- \u623b\u308a\u5024: SList (Snoc '[] Double) = SList '[Double]\n\n= 13 ::: \"t\" ::: 4.1 ::: SNil\n```\n\n\u3061\u3083\u3093\u3068\u578b\u304c\u4ed8\u3044\u3066\u3044\u307e\u3059\u306d\u3002\n(\u5f53\u7136\u3067\u3059\u304c)\u578b\u95a2\u6570\u3068\u95a2\u6570\u304c\u5168\u304f\u540c\u3058\u5f62\u3092\u3057\u3066\u3044\u308b\u306e\u3082\u9762\u767d\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\nConstraint\u30ab\u30a4\u30f3\u30c9\n===\n\u3053\u308c\u3067\u3084\u308a\u305f\u3044\u3053\u3068\u306f\u5b9f\u73fe\u51fa\u6765\u305f\u306e\u3067\u3059\u304c\u3001SList\u306fShow\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u306e\u3067\u3001\u5f53\u7136show\u3059\u308b\u4e8b\u304c\u51fa\u6765\u305a\u3001\u30c7\u30d0\u30c3\u30b0\u3068\u304b\u3067\u3061\u3087\u3063\u3068\u56f0\u308a\u307e\u3059\u3002\n\n```ghci:ghci\n(3::Int) ::: SNil\n\n<interactive>:3:1:\n    No instance for (Show (SList '[Int])) arising from a use of \u2018print\u2019\n    In a stmt of an interactive GHCi command: print it\n```\n\n\u30b3\u30ec\u3092Show\u306einstance\u306b\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001\u30ea\u30b9\u30c8\u5185\u306e\u5168\u3066\u306e\u8981\u7d20\u304cShow\u306einstance\u3067\u3042\u308b\u3053\u3068\u3092\u8868\u3055\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\n\u3053\u306e\u3088\u3046\u306a\u5236\u7d04\u3092\u4ed8\u3051\u308b\u305f\u3081\u306b\u306fConstraint\u30ab\u30a4\u30f3\u30c9\u3092\u7528\u3044\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\n\u524d\u6e96\u5099\u3068\u3057\u3066\u66f4\u306b\u62e1\u5f35\u3092\u8ffd\u52a0\u3057\u3001Constraint\u3092import\u3057\u307e\u3057\u3087\u3046\n\n```hakell:haskell\n{-# LANGUAGE ConstraintKinds #-}\n{-# LANGUAGE StandaloneDeriving #-}\n\nimport GHC.Exts(Constraint)\n```\n\nConstraint\u30ab\u30a4\u30f3\u30c9\u306f\u8907\u6570\u306e\u5236\u7d04\u3092\u30bf\u30d7\u30eb\u3067\u8868\u3057\u307e\u3059\u3002\n\u30ea\u30b9\u30c8\u4e2d\u306e\u5168\u3066\u306e\u8981\u7d20\u306b\u5bfe\u3059\u308b\u5236\u7d04\u306f\u4ee5\u4e0b\u306e\u69d8\u306b\u66f8\u3051\u307e\u3059\u3002\n\n```haskell:haskell\ntype family All (c :: * -> Constraint) (as :: [*]) :: Constraint\ntype instance All c '[] = ()\ntype instance All c (a ': as) = (c a, All c as)\n```\n\n\u578b\u3092\u5408\u308f\u305b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```haskell:\u624b\u52d5\u7c21\u7d04\nAll Show '[Int, Double]\n= (Show Int, All Show '[Double])\n= (Show Int, (Show Double, All Show '[])\n= (Show Int, (Show Double, ()))\n```\n\n\u3053\u306e\u3088\u3046\u306b\u3001\u8981\u7d20\u4e2d\u306e\u5168\u3066\u306e\u8981\u7d20(Int,Double)\u306b\u5bfe\u3057\u3066Show\u5236\u7d04\u3092\u4ed8\u3051\u3089\u308c\u307e\u3057\u305f\uff01\n\n\u3042\u3068\u306f\u3053\u308c\u3092\u7528\u3044\u3066Show instance\u3092\u5c0e\u51fa\u3059\u308c\u3070\n\n```haskell:haskell\nderiving instance All Show as => Show (SList as)\n```\n\n```ghci:ghci\n> (\"test\"::String) ::: (3::Int) ::: SNil\n\"test\" ::: (3 ::: SNil)\n```\n\n\u3053\u306e\u3088\u3046\u306b\u3061\u3083\u3093\u3068show\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff01\n\n\u304a\u308f\u308a\u306b\n==\n\u578b\u30ec\u30d9\u30eb\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3001\u53c2\u8003\u8a18\u4e8b\u8aad\u3093\u3067\u4ee5\u6765\u3001\u3059\u3052\u30fc\u304b\u3063\u3053\u3044\u3044\u611f\u3058\u3060\u3057\u4f7f\u3063\u3066\u307f\u305f\u3044\u306a\u30fc\u3063\u3066\u601d\u3063\u3066\u3044\u305f\u3082\u306e\u306e\u3001\u30a4\u30de\u30a4\u30c1\u4f7f\u3044\u3069\u3053\u308d\u304c\u308f\u304b\u3089\u305a\u30a2\u30ec\u3060\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u521d\u3081\u3066\u4fbf\u5229\u3063\u307d\u304f\u4f7f\u3046\u4e8b\u304c\u51fa\u6765\u305f\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u5185\u5bb9\u7684\u306b\u306f\u5168\u3066\u53c2\u8003\u8a18\u4e8b\u306b\u66f8\u3044\u3066\u3042\u308b\u3053\u3068\u306a\u306e\u3067\u3001\u53c2\u8003\u8a18\u4e8b\u3092\u8aad\u307f\u307e\u3057\u3087\u3046\uff01\n\n\u53c2\u8003\n===\n[GHC 7.4.1 \u306e\u578b\u30ec\u30d9\u30eb\u65b0\u6a5f\u80fd\u3092\u4f7f\u3044\u5012\u3059 \u301cGADTs\u3001\u578b\u65cf \u3068 DataKinds\u3001ConstraintKinds \u306e\u5186\u74b0\u301c - \u3053\u308c\u306f\u570f\u3067\u3059](http://blog.konn-san.com/article/20120606/promoted-types-and-list-arguments)\n", "coediting": false, "comments_count": 2, "created_at": "2014-05-20T15:56:49+09:00", "group": null, "id": "1f4d74fdf72333fa0927", "likes_count": 10, "private": false, "reactions_count": 0, "tags": [{"name": "Haskell", "versions": []}, {"name": "ghc", "versions": ["7.6.3", "7.8.2"]}], "title": "\u95a2\u6570\u306b\u591a\u76f8\u7684\u306a\u30ea\u30b9\u30c8\u3092\u9069\u7528\u3059\u308b", "updated_at": "2015-03-08T15:26:38+09:00", "url": "https://qiita.com/philopon/items/1f4d74fdf72333fa0927", "user": {"description": "", "facebook_id": "", "followees_count": 4, "followers_count": 48, "github_login_name": null, "id": "philopon", "items_count": 18, "linkedin_id": "", "location": "", "name": "", "organization": "", "permanent_id": 33562, "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/33562/profile-images/1473686152", "team_only": false, "twitter_screen_name": null, "website_url": "http://philopon.github.io"}, "page_views_count": null}