{"rendered_body": "\n<h1>\n<span id=\"\u307e\u3048\u304a\u304d\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%88%E3%81%8A%E3%81%8D\"><i class=\"fa fa-link\"></i></a>\u307e\u3048\u304a\u304d</h1>\n\n<p>\u3053\u3053\u6570\u65e5\u89e6\u3063\u3066\u308b<a href=\"http://elm-lang.org/\" rel=\"nofollow noopener\" target=\"_blank\">Elm</a>\u304c\u697d\u3057\u904e\u304e\u3066HaskellAC\u304c\u30ae\u30ea\u30ae\u30ea\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u3002\u3002\u65e5\u672c\u8a9e\u3067\u306e\u60c5\u5831\u304c\u5c11\u306a\u3044\u6c17\u3082\u3057\u307e\u3059\u3057\u3001\u64ec\u4f3c\u4e71\u6570\u751f\u6210\u5668(pseudo random number generator; PRNG)\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8a71\u3067\u8336\u3092\u6fc1\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002<br>\nElm\u3068\u3066\u3082\u697d\u3057\u3044\u306e\u3067\u662f\u975e\u89e6\u308a\u307e\u3057\u3087\u3046\uff01<a href=\"http://qiita.com/advent-calendar/2014/elm\">Elm Advent Calendar 2014</a>\u3082\u307e\u3060\u67a0\u304c\u7a7a\u3044\u3066\u308b\u69d8\u3067\u3059\uff01</p>\n\n<p>\u3055\u3066\u3001Haskeller\u306e\u7686\u69d8\u3001\u4e71\u6570\u306f\u304a\u4f7f\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\u79c1\u306f\u6b86\u3069\u4f7f\u3044\u307e\u305b\u3093\u3002<br>\n\u2026\u2026\u3067\u3059\u304c\u3001\u30b2\u30fc\u30e0\u3084\u4e71\u629e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3001\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u306a\u3069\u4e71\u6570\u304c\u5fc5\u8981\u3068\u306a\u308b\u30b7\u30c1\u30e5\u30a8\u30fc\u30b7\u30e7\u30f3\u3082\u591a\u3044\u304b\u3068\u601d\u308f\u308c\u307e\u3059\u3002\u3042\u3068\u3001Haskell\u306e\u5229\u70b9\u3068\u3057\u3066\u6319\u3052\u3089\u308c\u308b\u4e8b\u3082\u591a\u3044\u3001QuickCheck\u3068\u3044\u3063\u305f\u30e9\u30f3\u30c0\u30e0\u30c6\u30b9\u30c8\u3067\u3082\u4e71\u6570\u304c\u5fc5\u8981\u3067\u3059\u306d\u3002</p>\n\n<p>Haskell\u306e\u5834\u5408\u3001Haskell98\u306e\u6642\u70b9\u3067\u306f\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066<a href=\"https://www.haskell.org/onlinereport/random.html\" rel=\"nofollow noopener\" target=\"_blank\">PRNG\u30e9\u30a4\u30d6\u30e9\u30ea\u306eAPI</a>\u304c\u7b56\u5b9a\u3055\u308c\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001Haskell2010\u3067\u306f\u524a\u9664\u3055\u308c\u305f\u305f\u3081\u3001\u30e6\u30fc\u30b6\u30fc\u304c\u81ea\u5206\u3067PRNG\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u6210\u307e\u305f\u306f\u65e2\u5b58\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304b\u3089\u9078\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p>\n\n<p>Haskell98\u6a19\u6e96\u306erandom\u30d1\u30c3\u30b1\u30fc\u30b8\u306f\u30011.\u9577\u304f\u306a\u3044\u5468\u671f\u30012.Haskell98\u7531\u6765\u306e\u53e4\u3044API\u306e\u5236\u7d04\u3067\u5185\u90e8\u72b6\u614b\u3092\u6bce\u56de\u30b3\u30d4\u30fc\u3059\u308b\u30013.\u305d\u306e\u305f\u3081\u9045\u3044\u30014.CPU\u6642\u9593\u3068\u73fe\u5728\u6642\u9593\u3067\u521d\u671f\u5316(\u30dd\u30b1\u30e2\u30f3\u304b\u306a\uff1f\uff1f\uff1f)\u306a\u3069\u3001\u904e\u53bb\u306b\u6a19\u6e96\u3060\u3063\u305f\u305f\u3081\u591a\u304f\u306e\u74b0\u5883\u3067\u4f7f\u7528\u51fa\u6765\u308b\u3068\u8003\u3048\u3089\u308c\u308b\u3001\u3068\u3044\u3046\u70b9\u4ee5\u5916\u306b\u4f59\u308a\u304a\u52e7\u3081\u3067\u304d\u308b\u6240\u304c\u6709\u308a\u307e\u305b\u3093\u3002</p>\n\n<p>\u305d\u3053\u3067\u3001\u672c\u7a3f\u3067\u306fHaskell\u306ePRNG\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3064\u3044\u3066\u306e\u6bd4\u8f03\u3092\u884c\u306a\u3063\u305f\u5f8c\u3001\u5c11\u3057\u6697\u53f7\u8ad6\u7684\u64ec\u4f3c\u4e71\u6570\u751f\u6210\u5668(cryptographically secure pseudo random number generator; CSPRNG)\u306b\u3064\u3044\u3066\u3082\u89e6\u308c\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002</p>\n\n<h1>\n<span id=\"haskell\u306eprng\u30e9\u30a4\u30d6\u30e9\u30ea\" class=\"fragment\"></span><a href=\"#haskell%E3%81%AEprng%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA\"><i class=\"fa fa-link\"></i></a>Haskell\u306ePRNG\u30e9\u30a4\u30d6\u30e9\u30ea</h1>\n\n<p>\u3068\u308a\u3042\u3048\u305a\u3056\u3063\u3068\u691c\u7d22\u3057\u3066\u307f\u305f\u6240\u3001\u30d2\u30c3\u30c8\u3057\u305fPRNG\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3053\u306e\u4f4d\u3067\u3057\u3087\u3046\u304b(\u5927\u62b5Category\u304cMath\u3060\u3051\u306a\u306e\u3067\u51c4\u304f\u691c\u7d22\u3057\u306b\u304f\u3044)\u3002\u305d\u308c\u305e\u308c\u9069\u5f53\u306b\u89e3\u8aac\u3057\u3066\u3044\u304d\u307e\u3059\u3002</p>\n\n<ul>\n<li><a href=\"http://hackage.haskell.org/package/random\" rel=\"nofollow noopener\" target=\"_blank\">random</a></li>\n<li><a href=\"http://hackage.haskell.org/package/mwc-random\" rel=\"nofollow noopener\" target=\"_blank\">mwc-random</a></li>\n<li><a href=\"http://hackage.haskell.org/package/mersenne-random-pure64\" rel=\"nofollow noopener\" target=\"_blank\">mersenne-random-pure64</a></li>\n<li><a href=\"http://hackage.haskell.org/package/mersenne-random\" rel=\"nofollow noopener\" target=\"_blank\">mersenne-random</a></li>\n<li><a href=\"http://hackage.haskell.org/package/tf-random\" rel=\"nofollow noopener\" target=\"_blank\">tf-random</a></li>\n<li><a href=\"http://hackage.haskell.org/package/xorshift\" rel=\"nofollow noopener\" target=\"_blank\">xorshift</a></li>\n</ul>\n\n<h2>\n<span id=\"random\" class=\"fragment\"></span><a href=\"#random\"><i class=\"fa fa-link\"></i></a>random</h2>\n\n<p>Haskell98\u6a19\u6e96\u306ePRNG\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002Haskell98Report\u3067\u306fAPI\u3068PRNG\u306e\u6e80\u3059\u3079\u304d\u6761\u4ef6\u3092\u898f\u5b9a\u3059\u308b\u306b\u7559\u3081\u3001\u5b9f\u88c5\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u89e6\u308c\u3066\u3044\u307e\u305b\u3093\u304c\u3001random\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u306f[1]\u306e\u65b9\u6cd5\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\u3059\u3079\u3066Haskell\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"haskell\">\n<div class=\"code-lang\"><span class=\"bold\">random.hs</span></div>\n<div class=\"highlight\"><pre><span class=\"kr\">import</span> <span class=\"nn\">System.Random</span>\n\n<span class=\"n\">main</span> <span class=\"o\">::</span> <span class=\"kt\">IO</span> <span class=\"nb\">()</span>\n<span class=\"n\">main</span> <span class=\"o\">=</span> <span class=\"kr\">do</span>\n    <span class=\"n\">gen0</span> <span class=\"o\">&lt;-</span> <span class=\"n\">newStdGen</span>\n    <span class=\"kr\">let</span> <span class=\"p\">(</span><span class=\"n\">r1</span><span class=\"p\">,</span> <span class=\"n\">gen1</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">random</span> <span class=\"n\">gen0</span>\n        <span class=\"p\">(</span><span class=\"n\">r1'</span><span class=\"p\">,</span> <span class=\"kr\">_</span>  <span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">random</span> <span class=\"n\">gen0</span> <span class=\"c1\">-- \u540c\u3058gen\u3092\u4f7f\u7528\u3057\u3066\u540c\u3058\u578b\u3092\u751f\u6210\u3059\u308b\u3068\u7d50\u679c\u3082\u540c\u3058</span>\n        <span class=\"p\">(</span><span class=\"n\">r2</span><span class=\"p\">,</span> <span class=\"n\">gen2</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">random</span> <span class=\"n\">gen1</span>\n        <span class=\"p\">(</span><span class=\"n\">r3</span><span class=\"p\">,</span> <span class=\"n\">gen3</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">randomR</span> <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span> <span class=\"n\">gen2</span>\n        <span class=\"n\">r4</span>         <span class=\"o\">=</span> <span class=\"n\">randoms</span> <span class=\"n\">gen3</span> <span class=\"c1\">-- \u4e71\u6570\u306e\u7121\u9650\u30ea\u30b9\u30c8\u3092\u8fd4\u3059</span>\n    <span class=\"n\">print</span> <span class=\"p\">(</span><span class=\"n\">r1</span>  <span class=\"o\">::</span> <span class=\"kt\">Int</span><span class=\"p\">)</span>\n    <span class=\"n\">print</span> <span class=\"p\">(</span><span class=\"n\">r1'</span> <span class=\"o\">::</span> <span class=\"kt\">Int</span><span class=\"p\">)</span>\n    <span class=\"n\">print</span> <span class=\"p\">(</span><span class=\"n\">r2</span>  <span class=\"o\">::</span> <span class=\"kt\">Double</span><span class=\"p\">)</span> <span class=\"c1\">-- Double\u306e\u7bc4\u56f2\u306f[0,1)</span>\n    <span class=\"n\">print</span> <span class=\"p\">(</span><span class=\"n\">r3</span>  <span class=\"o\">::</span> <span class=\"kt\">Int</span><span class=\"p\">)</span>\n    <span class=\"n\">print</span> <span class=\"p\">(</span><span class=\"n\">take</span> <span class=\"mi\">3</span> <span class=\"n\">r4</span> <span class=\"o\">::</span> <span class=\"p\">[</span><span class=\"kt\">Double</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"sh\"><div class=\"highlight\"><pre><span class=\"nv\">$ </span>runhaskell examples/random.hs\n<span class=\"nt\">-140564301203516694</span>\n<span class=\"nt\">-140564301203516694</span>\n0.19977632985837557\n<span class=\"nt\">-90</span>\n<span class=\"o\">[</span>0.4047517803031183,0.2450618611537484,0.5026396495543536]\n</pre></div></div>\n\n<p>\u306f\u3044\u3001\u666e\u901a\u306b\u4f7f\u3048\u307e\u3059\u306d\u3002\u57fa\u672c\u7684\u306bgen\u3092\u5f15\u6570\u3067\u6301\u3061\u56de\u3057\u3066\u4f7f\u7528\u3057\u307e\u3059\u3002\u8907\u6570\u306egen\u304c\u5fc5\u8981\u306a\u6642(\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u3068\u304b\u3001randoms\u306b\u5165\u308c\u308b\u3068\u304b)\u306fsplit\u3092\u4f7f\u7528\u3057\u3066gen\u30922\u3064\u306b\u5206\u3051\u307e\u3059\u3002</p>\n\n<h2>\n<span id=\"mwc-random\" class=\"fragment\"></span><a href=\"#mwc-random\"><i class=\"fa fa-link\"></i></a>mwc-random</h2>\n\n<p>\u30ad\u30e3\u30ea\u30fc\u4ed8\u304d\u4e57\u7b97(multiply-with-carry; MWC)\u306e\u5185\u3001lag-256 MWC\u3068\u547c\u3070\u308c\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002<strong>\u3059\u3079\u3066Haskell\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059</strong>\u3002</p>\n\n<p><a href=\"https://hackage.haskell.org/package/primitive\" rel=\"nofollow noopener\" target=\"_blank\">primitive</a>\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u7528\u3057\u3066\u304a\u308a\u3001IO/ST\u3092\u5171\u901a\u306e\u30b3\u30fc\u30c9\u3067\u4f7f\u7528\u3059\u308b\u4e8b\u304c\u51fa\u6765\u307e\u3059\u3002</p>\n\n<p>\u307e\u305a\u306fIO\u30e2\u30ca\u30c9\u3092\u4f7f\u7528\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"haskell\">\n<div class=\"code-lang\"><span class=\"bold\">mwc-io.hs</span></div>\n<div class=\"highlight\"><pre><span class=\"kr\">import</span> <span class=\"nn\">System.Random.MWC</span>\n\n<span class=\"n\">main</span> <span class=\"o\">::</span> <span class=\"kt\">IO</span> <span class=\"nb\">()</span>\n<span class=\"n\">main</span> <span class=\"o\">=</span> <span class=\"n\">withSystemRandom</span> <span class=\"o\">.</span> <span class=\"n\">asGenIO</span> <span class=\"o\">$</span> <span class=\"nf\">\\</span><span class=\"n\">gen</span> <span class=\"o\">-&gt;</span> <span class=\"kr\">do</span>\n    <span class=\"n\">uniform</span>              <span class=\"n\">gen</span> <span class=\"o\">&gt;&gt;=</span> <span class=\"nf\">\\</span><span class=\"n\">i</span> <span class=\"o\">-&gt;</span> <span class=\"n\">print</span> <span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">::</span> <span class=\"kt\">Int</span><span class=\"p\">)</span>\n    <span class=\"n\">uniformR</span> <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span> <span class=\"n\">gen</span> <span class=\"o\">&gt;&gt;=</span> <span class=\"nf\">\\</span><span class=\"n\">d</span> <span class=\"o\">-&gt;</span> <span class=\"n\">print</span> <span class=\"p\">(</span><span class=\"n\">d</span> <span class=\"o\">::</span> <span class=\"kt\">Double</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"sh\"><div class=\"highlight\"><pre><span class=\"nv\">$ </span>runhaskell examples/mwc-io.hs\n<span class=\"nt\">-5961215003745553123</span>\n6.167462573191315\n</pre></div></div>\n\n<p>\u6b21\u306bST\u30e2\u30ca\u30c9\u3092\u4f7f\u7528\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"haskell\">\n<div class=\"code-lang\"><span class=\"bold\">mwc-st.hs</span></div>\n<div class=\"highlight\"><pre><span class=\"cp\">{-# LANGUAGE NoMonomorphismRestriction #-}</span>\n<span class=\"kr\">import</span> <span class=\"k\">qualified</span> <span class=\"nn\">Data.Vector.Unboxed</span> <span class=\"k\">as</span> <span class=\"n\">U</span>\n<span class=\"kr\">import</span> <span class=\"nn\">Control.Applicative</span>\n<span class=\"kr\">import</span> <span class=\"nn\">Control.Monad.ST</span><span class=\"p\">(</span><span class=\"n\">runST</span><span class=\"p\">)</span>\n<span class=\"kr\">import</span> <span class=\"nn\">System.Random.MWC</span>\n\n <span class=\"c1\">-- \u6bce\u56de\u540c\u3058\u5024\u3092\u8fd4\u3059</span>\n<span class=\"n\">pureA</span> <span class=\"o\">::</span> <span class=\"p\">(</span><span class=\"kt\">Int</span><span class=\"p\">,</span> <span class=\"kt\">Double</span><span class=\"p\">)</span>\n<span class=\"n\">pureA</span> <span class=\"o\">=</span> <span class=\"n\">runST</span> <span class=\"o\">$</span> <span class=\"kr\">do</span>\n    <span class=\"n\">gen</span> <span class=\"o\">&lt;-</span> <span class=\"n\">initialize</span> <span class=\"p\">(</span><span class=\"kt\">U</span><span class=\"o\">.</span><span class=\"n\">fromList</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"mi\">42</span><span class=\"p\">])</span>\n    <span class=\"p\">(,)</span> <span class=\"o\">&lt;$&gt;</span> <span class=\"n\">uniform</span> <span class=\"n\">gen</span> <span class=\"o\">&lt;*&gt;</span> <span class=\"n\">uniformR</span> <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span> <span class=\"n\">gen</span>\n\n <span class=\"c1\">-- Seed\u3092\u4f7f\u3046\u3053\u3068\u3067random\u7b49\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u771f\u4f3c\u4e8b\u3092\u51fa\u6765\u308b</span>\n<span class=\"n\">pureB</span> <span class=\"o\">::</span> <span class=\"kt\">Seed</span> <span class=\"o\">-&gt;</span> <span class=\"p\">((</span><span class=\"kt\">Int</span><span class=\"p\">,</span> <span class=\"kt\">Double</span><span class=\"p\">),</span> <span class=\"kt\">Seed</span><span class=\"p\">)</span>\n<span class=\"n\">pureB</span> <span class=\"n\">seed</span> <span class=\"o\">=</span> <span class=\"n\">runST</span> <span class=\"o\">$</span> <span class=\"kr\">do</span>\n    <span class=\"n\">gen</span>   <span class=\"o\">&lt;-</span> <span class=\"n\">restore</span> <span class=\"n\">seed</span>\n    <span class=\"n\">ret</span>   <span class=\"o\">&lt;-</span> <span class=\"p\">(,)</span> <span class=\"o\">&lt;$&gt;</span> <span class=\"n\">uniform</span> <span class=\"n\">gen</span> <span class=\"o\">&lt;*&gt;</span> <span class=\"n\">uniformR</span> <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span> <span class=\"n\">gen</span>\n    <span class=\"n\">seed'</span> <span class=\"o\">&lt;-</span> <span class=\"n\">save</span> <span class=\"n\">gen</span>\n    <span class=\"n\">return</span> <span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">,</span> <span class=\"n\">seed'</span><span class=\"p\">)</span>\n\n<span class=\"n\">main</span> <span class=\"o\">::</span> <span class=\"kt\">IO</span> <span class=\"nb\">()</span>\n<span class=\"n\">main</span> <span class=\"o\">=</span> <span class=\"kr\">do</span>\n    <span class=\"n\">print</span> <span class=\"n\">pureA</span>\n    <span class=\"n\">seed0</span> <span class=\"o\">&lt;-</span> <span class=\"n\">createSystemRandom</span> <span class=\"o\">&gt;&gt;=</span> <span class=\"n\">save</span>\n    <span class=\"kr\">let</span> <span class=\"p\">(</span><span class=\"n\">b0</span><span class=\"p\">,</span> <span class=\"n\">seed1</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">pureB</span> <span class=\"n\">seed0</span>\n        <span class=\"p\">(</span><span class=\"n\">b1</span><span class=\"p\">,</span> <span class=\"kr\">_</span>    <span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">pureB</span> <span class=\"n\">seed1</span>\n    <span class=\"n\">print</span> <span class=\"n\">b0</span>\n    <span class=\"n\">print</span> <span class=\"n\">b1</span>\n</pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"sh\"><div class=\"highlight\"><pre><span class=\"nv\">$ </span>runhaskell examples/mwc-st.hs\n<span class=\"o\">(</span>8017236977809806739,75.8981759359263<span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"nt\">-2290309892113622472</span>,15.327453033603632<span class=\"o\">)</span>\n<span class=\"o\">(</span>6768560660450525899,-50.111907886352355<span class=\"o\">)</span>\n</pre></div></div>\n\n<h2>\n<span id=\"mersenne-random-pure64\" class=\"fragment\"></span><a href=\"#mersenne-random-pure64\"><i class=\"fa fa-link\"></i></a>mersenne-random-pure64</h2>\n\n<p><a href=\"http://www.math.sci.hiroshima-u.ac.jp/%7Em-mat/MT/mt.html\" rel=\"nofollow noopener\" target=\"_blank\">\u30e1\u30eb\u30bb\u30f3\u30cc\u30c4\u30a4\u30b9\u30bf\u30fc(mersenne twister; MT)</a>\u306e\u5185\u3001MT19937-64(2004/9/29 version)\u3078\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3067\u3059\u3002</p>\n\n<p>RandomGen\u578b\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3057random\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u540c\u3058\u611f\u3058\u3067\u4f7f\u7528\u3059\u308b\u305f\u3081\u4f8b\u306f\u5272\u611b\u3057\u307e\u3059\u3002</p>\n\n<h2>\n<span id=\"mersenne-random\" class=\"fragment\"></span><a href=\"#mersenne-random\"><i class=\"fa fa-link\"></i></a>mersenne-random</h2>\n\n<p>\u3061\u3087\u3063\u3068\u53e4\u3044(&lt;1.4)<a href=\"http://www.math.sci.hiroshima-u.ac.jp/%7Em-mat/MT/SFMT/index-jp.html\" rel=\"nofollow noopener\" target=\"_blank\">SIMD-oriented Fast Mersenne Twister(SFMT)</a>\u3078\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3067\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"haskell\">\n<div class=\"code-lang\"><span class=\"bold\">mersenne.hs</span></div>\n<div class=\"highlight\"><pre><span class=\"kr\">import</span> <span class=\"nn\">System.Random.Mersenne</span>\n\n<span class=\"n\">main</span> <span class=\"o\">::</span> <span class=\"kt\">IO</span> <span class=\"nb\">()</span>\n<span class=\"n\">main</span> <span class=\"o\">=</span> <span class=\"kr\">do</span>\n    <span class=\"n\">gen</span> <span class=\"o\">&lt;-</span> <span class=\"n\">getStdGen</span>\n    <span class=\"n\">random</span>  <span class=\"n\">gen</span> <span class=\"o\">&gt;&gt;=</span> <span class=\"nf\">\\</span><span class=\"n\">i</span> <span class=\"o\">-&gt;</span> <span class=\"n\">print</span> <span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">::</span> <span class=\"kt\">Int</span><span class=\"p\">)</span>\n    <span class=\"n\">randoms</span> <span class=\"n\">gen</span> <span class=\"o\">&gt;&gt;=</span> <span class=\"nf\">\\</span><span class=\"n\">i</span> <span class=\"o\">-&gt;</span> <span class=\"n\">print</span> <span class=\"p\">(</span><span class=\"n\">take</span> <span class=\"mi\">3</span> <span class=\"n\">i</span> <span class=\"o\">::</span> <span class=\"p\">[</span><span class=\"kt\">Double</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"sh\"><div class=\"highlight\"><pre><span class=\"nv\">$ </span>runhaskell examples/mersenne.hs\n<span class=\"nt\">-619718723374138645</span>\n<span class=\"o\">[</span>0.4551769174016148,0.30478929015057205,0.1370638521698185]\n</pre></div></div>\n\n<h2>\n<span id=\"tf-random\" class=\"fragment\"></span><a href=\"#tf-random\"><i class=\"fa fa-link\"></i></a>tf-random</h2>\n\n<p>[2]\u306e\u65b9\u6cd5\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\u5185\u90e8\u3067\u4f7f\u7528\u3057\u3066\u3044\u308bthreefish-256\u90e8\u5206\u306fC\u3067\u3001\u305d\u306e\u4ed6\u306e\u90e8\u5206\u306fHaskell\u3067\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002</p>\n\n<p>RandomGen\u578b\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3057random\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u540c\u3058\u611f\u3058\u3067\u4f7f\u7528\u3059\u308b\u305f\u3081\u4f8b\u306f\u5272\u611b\u3057\u307e\u3059\u3002</p>\n\n<h2>\n<span id=\"xorshift\" class=\"fragment\"></span><a href=\"#xorshift\"><i class=\"fa fa-link\"></i></a>xorshift</h2>\n\n<p>32/64bit\u306exorshift\u306eHaskell\u5b9f\u88c5\u3067\u3059\u3002</p>\n\n<p>RandomGen\u578b\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3057random\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u540c\u3058\u611f\u3058\u3067\u4f7f\u7528\u3059\u308b\u305f\u3081\u4f8b\u306f\u5272\u611b\u3057\u307e\u3059\u3002</p>\n\n<h1>\n<span id=\"\u7279\u5fb4\" class=\"fragment\"></span><a href=\"#%E7%89%B9%E5%BE%B4\"><i class=\"fa fa-link\"></i></a>\u7279\u5fb4</h1>\n\n<p>\u4ee5\u4e0a\u306e\u5404PRNG\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u7279\u5fb4\u3092\u8868\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002</p>\n\n<table>\n<thead>\n<tr>\n<th>\u30e9\u30a4\u30d6\u30e9\u30ea</th>\n<th>\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0</th>\n<th>\u5468\u671f</th>\n<th>Haskell</th>\n<th>\u521d\u671f\u5316</th>\n<th>Pure</th>\n<th>ST</th>\n<th>IO</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>random</td>\n<td>[1]</td>\n<td>~2.30584e18</td>\n<td>\u25ef</td>\n<td>CPU\u6642\u9593/\u73fe\u5728\u6642\u9593</td>\n<td>\u25ef</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>mwc-random</td>\n<td>lag-256 MWC</td>\n<td>2^8222</td>\n<td>\u25ef</td>\n<td>/dev/urandom(\u7121\u3051\u308c\u3070CPU\u6642\u9593/\u73fe\u5728\u6642\u9593)</td>\n<td>\u25b3<sup>1</sup>\n</td>\n<td>\u25ef</td>\n<td>\u25ef</td>\n</tr>\n<tr>\n<td>mersenne-random-pure64</td>\n<td>MT19937-64</td>\n<td>2^19937 - 1</td>\n<td>\u00d7</td>\n<td>CPU\u6642\u9593/\u73fe\u5728\u6642\u9593</td>\n<td>\u25ef</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>mersenne-random</td>\n<td>SFMT</td>\n<td>2^19937 - 1</td>\n<td>\u00d7</td>\n<td>CPU\u6642\u9593/\u73fe\u5728\u6642\u9593</td>\n<td>\u00d7</td>\n<td>\u00d7</td>\n<td>\u25ef</td>\n</tr>\n<tr>\n<td>tf-random</td>\n<td>[2]</td>\n<td>?</td>\n<td>\u00d7</td>\n<td>/dev/urandom(\u7121\u3051\u308c\u3070CPU\u6642\u9593/\u73fe\u5728\u6642\u9593)</td>\n<td>\u25ef</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>xorshift</td>\n<td>xorshift</td>\n<td>2^32 - 1 or 2^64 - 1</td>\n<td>\u25ef</td>\n<td>\u73fe\u5728\u6642\u9593</td>\n<td>\u25ef</td>\n<td>-</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n\n<ul>\n<li>Haskell: \u7d14Haskell\u5b9f\u88c5\u304b\u5426\u304b</li>\n<li>\u521d\u671f\u5316: newSystemGen\u306a\u3069\u306e\u95a2\u6570\u3067\u5185\u90e8\u72b6\u614b\u3092\u521d\u671f\u5316\u3059\u308b\u6642\u306b\u4f55\u3092\u4f7f\u7528\u3057\u3066\u521d\u671f\u5316\u3059\u308b\u304b</li>\n<li>Pure: \u7d14\u7c8b\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9</li>\n<li>ST: STRef\u3092\u4f7f\u7528\u3057\u305f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3002\u7d14\u7c8b\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u6709\u308c\u3070\u4e0d\u8981\u306a\u306e\u3067-\u3068\u3057\u305f\u3002</li>\n<li>IO: IORef\u3092\u4f7f\u7528\u3057\u305f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3002\u7d14\u7c8b\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u6709\u308c\u3070\u4e0d\u8981\u306a\u306e\u3067-\u3068\u3057\u305f\u3002</li>\n</ul>\n\n<p>\u25b3<sup>1</sup>: \u4e00\u65e6Seed\u306b\u5909\u63db\u3059\u308c\u3070\u53ef\u80fd\u3002\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u53c2\u7167</p>\n\n<h1>\n<span id=\"\u901f\u5ea6\u6bd4\u8f03\" class=\"fragment\"></span><a href=\"#%E9%80%9F%E5%BA%A6%E6%AF%94%E8%BC%83\"><i class=\"fa fa-link\"></i></a>\u901f\u5ea6\u6bd4\u8f03</h1>\n\n<p>\u7279\u306b\u30e2\u30f3\u30c6\u30ab\u30eb\u30ed\u6cd5\u306a\u3069\u5927\u91cf\u306e\u4e71\u6570\u3092\u5fc5\u8981\u3068\u3059\u308b\u624b\u6cd5\u3092\u7528\u3044\u308b\u6642\u306b\u3001\u4e71\u6570\u306e\u751f\u6210\u901f\u5ea6\u304c\u91cd\u8981\u3068\u306a\u308a\u307e\u3059\u3002</p>\n\n<p>1000\u500b\u306e64bit-Int\u306e\u751f\u6210\u6642\u9593\u306b\u3064\u3044\u3066\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3092\u53d6\u3063\u3066\u304a\u3044\u305f\u306e\u3067\u53c2\u8003\u306b\u306a\u308c\u3070\u3068\u601d\u3044\u307e\u3059\u3002</p>\n\n<p><a href=\"http://philopon.github.io/misc-benchmarks/random-all.html\" rel=\"nofollow noopener\" target=\"_blank\">\u5168\u4f53</a><br>\n<a href=\"http://philopon.github.io/misc-benchmarks/random-zoom.html\" rel=\"nofollow noopener\" target=\"_blank\">\u901f\u3044\u3082\u306e\u306e\u307f</a></p>\n\n<p>mersenne-random-pure64\u3092\u542b\u3080\u3001RandonGen\u578b\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u3082\u306e\u306f\u6bce\u56de\u5185\u90e8\u72b6\u614b\u3092\u30b3\u30d4\u30fc\u3057\u3066\u3044\u308b\u306e\u3067\u304b\u306a\u308a\u9045\u3044\u3053\u3068\u304c\u898b\u3066\u53d6\u308c\u307e\u3059(\u3064\u3089\u3044)\u3002</p>\n\n<p>mersenne-random\u306f\u5185\u90e8\u72b6\u614b\u3092\u6301\u3061\u56de\u3059\u306e\u3067\u9ad8\u901f\u3067\u3059\u304c\u3001IO\u30e2\u30ca\u30c9\u5185\u3067\u3057\u304b\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u305b\u3093(\u3061\u3087\u3063\u3068\u3064\u3089\u3044)\u3002</p>\n\n<p>mwc-random\u306f\u5168\u3066Haskell\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u306b\u3082\u95a2\u308f\u3089\u305a\u3001\u304b\u306a\u308a\u9ad8\u901f(1\u30921000\u56de\u8db3\u3059\u3060\u3051\u306ebaseline\u3068\u6bd4\u8f03\u3057\u30662.3\u500d\u7a0b\u5ea6\u306e\u6642\u9593\u3067\u6e08\u3093\u3067\u3044\u308b)\u3067\u3059\u3002\u30b9\u30b4\u30a4\uff01</p>\n\n<h1>\n<span id=\"\u3069\u308c\u3092\u4f7f\u3048\u3070\u826f\u3044\u304b\" class=\"fragment\"></span><a href=\"#%E3%81%A9%E3%82%8C%E3%82%92%E4%BD%BF%E3%81%88%E3%81%B0%E8%89%AF%E3%81%84%E3%81%8B\"><i class=\"fa fa-link\"></i></a>\u3069\u308c\u3092\u4f7f\u3048\u3070\u826f\u3044\u304b</h1>\n\n<p>PRNG\u306b\u3064\u3044\u3066\u4f59\u308a\u8a73\u3057\u304f\u306a\u3044&amp;&amp;\u72b6\u6cc1\u306b\u3088\u3063\u3066\u5fc5\u8981\u3068\u3055\u308c\u308b\u3082\u306e\u3082\u7570\u306a\u308b\u306e\u3067\u30a2\u30ec\u3067\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305amwc-random\u3092\u4f7f\u3063\u3066\u304a\u3051\u3070\u826f\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002</p>\n\n<p>mwc-random\u306b\u306f\u4e00\u69d8\u4e71\u6570\u4ee5\u5916\u306b\u3082\u69d8\u3005\u306a\u5206\u5e03\u306e\u4e71\u6570\u3092\u751f\u6210\u3059\u308b\u6a5f\u80fd\u3082\u3042\u308a\u3001\u305d\u3061\u3089\u3082\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u4fbf\u5229\u304b\u3068\u601d\u3044\u307e\u3059\u3002</p>\n\n<h1>\n<span id=\"\u3067\u3082\u30e1\u30eb\u30bb\u30f3\u30cc\u30c4\u30a4\u30b9\u30bf\u30fc\u4f7f\u3044\u305f\u3044\" class=\"fragment\"></span><a href=\"#%E3%81%A7%E3%82%82%E3%83%A1%E3%83%AB%E3%82%BB%E3%83%B3%E3%83%8C%E3%83%84%E3%82%A4%E3%82%B9%E3%82%BF%E3%83%BC%E4%BD%BF%E3%81%84%E3%81%9F%E3%81%84\"><i class=\"fa fa-link\"></i></a>\u3067\u3082\u30e1\u30eb\u30bb\u30f3\u30cc\u30c4\u30a4\u30b9\u30bf\u30fc\u4f7f\u3044\u305f\u3044</h1>\n\n<p>\u3068\u601d\u3044\u307e\u3057\u3066\u3001\u4eca\u98a8\u306a(mwc-random\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9<del>\u3092\u30d1\u30af\u3063\u305f</del>\u306b\u5408\u308f\u305b\u305f)SFMT\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u4f5c\u308a\u307e\u3057\u305f\uff01\u3088\u308d\u3057\u3051\u308c\u3070\u304a\u4f7f\u3044\u4e0b\u3055\u3044\u3002</p>\n\n<table>\n<thead>\n<tr>\n<th>\u30e9\u30a4\u30d6\u30e9\u30ea</th>\n<th>\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0</th>\n<th>\u5468\u671f</th>\n<th>Haskell</th>\n<th>\u521d\u671f\u5316</th>\n<th>Pure</th>\n<th>ST</th>\n<th>IO</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://hackage.haskell.org/package/sfmt\" rel=\"nofollow noopener\" target=\"_blank\">sfmt</a></td>\n<td>SFMT(1.4.1)</td>\n<td>2^19937 - 1</td>\n<td>\u00d7</td>\n<td>entropy(\u5f8c\u8ff0)</td>\n<td>\u25b3<sup>1</sup>\n</td>\n<td>\u25ef</td>\n<td>\u25ef</td>\n</tr>\n</tbody>\n</table>\n\n<p><a href=\"http://philopon.github.io/misc-benchmarks/random-new.html\" rel=\"nofollow noopener\" target=\"_blank\">\u30d9\u30f3\u30c1\u30de\u30fc\u30af</a></p>\n\n<h1>\n<span id=\"csprng\u306b\u3064\u3044\u3066\" class=\"fragment\"></span><a href=\"#csprng%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"><i class=\"fa fa-link\"></i></a>CSPRNG\u306b\u3064\u3044\u3066</h1>\n\n<p>\u3055\u3066\u3001\u3053\u3053\u307e\u3067\u306fPRNG\u306e\u8a71\u3002\u3053\u3053\u304b\u3089\u5c11\u3057CSPRNG\u306e\u8a71\u306b\u79fb\u308a\u307e\u3057\u3087\u3046\u3002\u66f4\u306b\u8a73\u3057\u304f\u306a\u3044\u4e0a\u306b\u7279\u306b\u9078\u629e\u80a2\u304c\u5e83\u3044\u8a33\u3067\u3082\u7121\u3044\u306e\u3067\u5217\u6319\u3059\u308b\u3060\u3051\u306b\u306a\u308a\u307e\u3059\u304c\u3054\u5bb9\u8d66\u304f\u3060\u3055\u3044\u3002</p>\n\n<p>Haskell\u3067\u6697\u53f7\u8ad6\u7684\u306a\u4e71\u6570\u3092\u6271\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3053\u308c\u3089\u4f4d\u304b\u3068\u601d\u308f\u308c\u307e\u3059\u3002</p>\n\n<ul>\n<li>\n<a href=\"http://hackage.haskell.org/package/entropy\" rel=\"nofollow noopener\" target=\"_blank\">entropy</a>/<a href=\"http://hackage.haskell.org/package/crypto-random\" rel=\"nofollow noopener\" target=\"_blank\">crypto-random</a>\n</li>\n<li><a href=\"http://hackage.haskell.org/package/cprng-aes\" rel=\"nofollow noopener\" target=\"_blank\">cprng-aes</a></li>\n<li><a href=\"http://hackage.haskell.org/package/threefish\" rel=\"nofollow noopener\" target=\"_blank\">threefish</a></li>\n</ul>\n\n<h2>\n<span id=\"entropycrypto-random\" class=\"fragment\"></span><a href=\"#entropycrypto-random\"><i class=\"fa fa-link\"></i></a>entropy/crypto-random</h2>\n\n<p>*nix\u306e/dev/urandom\u3084Windows\u306eCryptoAPI\u7b49\u304b\u3089\u4e71\u6570\u3092\u53d6\u5f97\u3059\u308b\u70ba\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u6bce\u306e\u30b3\u30fc\u30c9\u66f8\u304f\u306e\u82e6\u75db\u3067\u3057\u304b\u306a\u3044\u306e\u3067/dev/urandom\u3068\u304b\u76f4\u63a5\u89e6\u308b\u5fc5\u8981\u304c\u3042\u308b\u306a\u3089\u3053\u308c\u3089\u3092\u4f7f\u3063\u305f\u65b9\u304c\u5e78\u305b\u306b\u306a\u308c\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002</p>\n\n<h2>\n<span id=\"cprng-aes\" class=\"fragment\"></span><a href=\"#cprng-aes\"><i class=\"fa fa-link\"></i></a>cprng-aes</h2>\n\n<p>aes\u3092\u4f7f\u7528\u3057\u3066 <a href=\"http://ja.wikipedia.org/wiki/%E6%9A%97%E5%8F%B7%E8%AB%96%E7%9A%84%E6%93%AC%E4%BC%BC%E4%B9%B1%E6%95%B0%E7%94%9F%E6%88%90%E5%99%A8#.E6.9A.97.E5.8F.B7.E3.83.97.E3.83.AA.E3.83.9F.E3.83.86.E3.82.A3.E3.83.96.E3.81.AB.E5.9F.BA.E3.81.A5.E3.81.8F.E8.A8.AD.E8.A8.88\" rel=\"nofollow noopener\" target=\"_blank\">\u6697\u53f7\u8ad6\u7684\u64ec\u4f3c\u4e71\u6570\u751f\u6210\u5668 - \u6697\u53f7\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u306b\u57fa\u3065\u304f\u8a2d\u8a08 - Wikipedia</a>\u306e\u65b9\u6cd5\u3067CSPRNG\u3092\u69cb\u6210\u3057\u3066\u3044\u307e\u3059\u3002crypto-random\u306eAPI\u3067\u521d\u671f\u72b6\u614b\u3092\u751f\u6210\u3057\u30011MB\u6bce\u306bre-seed\u3092\u884c\u3063\u3066\u304a\u308a\u307e\u3059\u3002<br>\nyesod\u304c\u6a19\u6e96\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\u306b\u4f7f\u7528\u3057\u3066\u308b<a href=\"http://hackage.haskell.org/package/clientsession\" rel=\"nofollow noopener\" target=\"_blank\">clientsession</a>\u7b49\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p>\n\n<h2>\n<span id=\"threefish\" class=\"fragment\"></span><a href=\"#threefish\"><i class=\"fa fa-link\"></i></a>threefish</h2>\n\n<p>\u89e6\u3063\u305f\u4e8b\u7121\u3044\u306e\u3067\u8aac\u660e\u306f\u5272\u611b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3059\u3002\u30b9\u30df\u30de\u30bb\u30f3\u3002\u3002\u3002\u3053\u3093\u306a\u306e\u3082\u6709\u308b\u3088\u30fc\u3063\u3066\u4e8b\u3067\u3002\u3002\u3002</p>\n\n<h1>\n<span id=\"\u304a\u308f\u308a\u306b\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>\u304a\u308f\u308a\u306b</h1>\n\n<p>\u3059\u3054\u3044\u5c3b\u3059\u307c\u307f\u3067\u3059\u307f\u307e\u305b\u3093\u3002\u3002\u3002<br>\n\u8efd\u3044\u6c17\u6301\u3061\u3067PRNG\u306e\u8a18\u4e8b\u3067\u3082\u66f8\u3053\u3046\u3068\u3057\u305f\u7d50\u679c\u304c\u30b3\u30ec\u3060\u3088\uff01\uff01\uff01</p>\n\n<h1>\n<span id=\"\u53c2\u8003\u6587\u732e\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\"><i class=\"fa fa-link\"></i></a>\u53c2\u8003\u6587\u732e</h1>\n\n<p>[1] Pierre L'Ecuyer, Efficient and portable combined random number generators, Comm ACM, 31(6), Jun 1988, pp742-749. </p>\n\n<p>[2] Koen Claessen and Micha\u0142 H. Pa\u0142ka, Splittable Pseudorandom Number Generators Using Cryptographic Hashing by Claessen, Haskell Symposium 2013, Sep 2013</p>\n", "body": "\u307e\u3048\u304a\u304d\n===\n\u3053\u3053\u6570\u65e5\u89e6\u3063\u3066\u308b[Elm](http://elm-lang.org/)\u304c\u697d\u3057\u904e\u304e\u3066HaskellAC\u304c\u30ae\u30ea\u30ae\u30ea\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u3002\u3002\u65e5\u672c\u8a9e\u3067\u306e\u60c5\u5831\u304c\u5c11\u306a\u3044\u6c17\u3082\u3057\u307e\u3059\u3057\u3001\u64ec\u4f3c\u4e71\u6570\u751f\u6210\u5668(pseudo random number generator; PRNG)\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8a71\u3067\u8336\u3092\u6fc1\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nElm\u3068\u3066\u3082\u697d\u3057\u3044\u306e\u3067\u662f\u975e\u89e6\u308a\u307e\u3057\u3087\u3046\uff01[Elm Advent Calendar 2014](http://qiita.com/advent-calendar/2014/elm)\u3082\u307e\u3060\u67a0\u304c\u7a7a\u3044\u3066\u308b\u69d8\u3067\u3059\uff01\n\n\u3055\u3066\u3001Haskeller\u306e\u7686\u69d8\u3001\u4e71\u6570\u306f\u304a\u4f7f\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\u79c1\u306f\u6b86\u3069\u4f7f\u3044\u307e\u305b\u3093\u3002\n\u2026\u2026\u3067\u3059\u304c\u3001\u30b2\u30fc\u30e0\u3084\u4e71\u629e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3001\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u306a\u3069\u4e71\u6570\u304c\u5fc5\u8981\u3068\u306a\u308b\u30b7\u30c1\u30e5\u30a8\u30fc\u30b7\u30e7\u30f3\u3082\u591a\u3044\u304b\u3068\u601d\u308f\u308c\u307e\u3059\u3002\u3042\u3068\u3001Haskell\u306e\u5229\u70b9\u3068\u3057\u3066\u6319\u3052\u3089\u308c\u308b\u4e8b\u3082\u591a\u3044\u3001QuickCheck\u3068\u3044\u3063\u305f\u30e9\u30f3\u30c0\u30e0\u30c6\u30b9\u30c8\u3067\u3082\u4e71\u6570\u304c\u5fc5\u8981\u3067\u3059\u306d\u3002\n\nHaskell\u306e\u5834\u5408\u3001Haskell98\u306e\u6642\u70b9\u3067\u306f\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066[PRNG\u30e9\u30a4\u30d6\u30e9\u30ea\u306eAPI](https://www.haskell.org/onlinereport/random.html)\u304c\u7b56\u5b9a\u3055\u308c\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001Haskell2010\u3067\u306f\u524a\u9664\u3055\u308c\u305f\u305f\u3081\u3001\u30e6\u30fc\u30b6\u30fc\u304c\u81ea\u5206\u3067PRNG\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u6210\u307e\u305f\u306f\u65e2\u5b58\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304b\u3089\u9078\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nHaskell98\u6a19\u6e96\u306erandom\u30d1\u30c3\u30b1\u30fc\u30b8\u306f\u30011.\u9577\u304f\u306a\u3044\u5468\u671f\u30012.Haskell98\u7531\u6765\u306e\u53e4\u3044API\u306e\u5236\u7d04\u3067\u5185\u90e8\u72b6\u614b\u3092\u6bce\u56de\u30b3\u30d4\u30fc\u3059\u308b\u30013.\u305d\u306e\u305f\u3081\u9045\u3044\u30014.CPU\u6642\u9593\u3068\u73fe\u5728\u6642\u9593\u3067\u521d\u671f\u5316(\u30dd\u30b1\u30e2\u30f3\u304b\u306a\uff1f\uff1f\uff1f)\u306a\u3069\u3001\u904e\u53bb\u306b\u6a19\u6e96\u3060\u3063\u305f\u305f\u3081\u591a\u304f\u306e\u74b0\u5883\u3067\u4f7f\u7528\u51fa\u6765\u308b\u3068\u8003\u3048\u3089\u308c\u308b\u3001\u3068\u3044\u3046\u70b9\u4ee5\u5916\u306b\u4f59\u308a\u304a\u52e7\u3081\u3067\u304d\u308b\u6240\u304c\u6709\u308a\u307e\u305b\u3093\u3002\n\n\u305d\u3053\u3067\u3001\u672c\u7a3f\u3067\u306fHaskell\u306ePRNG\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3064\u3044\u3066\u306e\u6bd4\u8f03\u3092\u884c\u306a\u3063\u305f\u5f8c\u3001\u5c11\u3057\u6697\u53f7\u8ad6\u7684\u64ec\u4f3c\u4e71\u6570\u751f\u6210\u5668(cryptographically secure pseudo random number generator; CSPRNG)\u306b\u3064\u3044\u3066\u3082\u89e6\u308c\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nHaskell\u306ePRNG\u30e9\u30a4\u30d6\u30e9\u30ea\n===\n\u3068\u308a\u3042\u3048\u305a\u3056\u3063\u3068\u691c\u7d22\u3057\u3066\u307f\u305f\u6240\u3001\u30d2\u30c3\u30c8\u3057\u305fPRNG\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3053\u306e\u4f4d\u3067\u3057\u3087\u3046\u304b(\u5927\u62b5Category\u304cMath\u3060\u3051\u306a\u306e\u3067\u51c4\u304f\u691c\u7d22\u3057\u306b\u304f\u3044)\u3002\u305d\u308c\u305e\u308c\u9069\u5f53\u306b\u89e3\u8aac\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n* [random](http://hackage.haskell.org/package/random)\n* [mwc-random](http://hackage.haskell.org/package/mwc-random)\n* [mersenne-random-pure64](http://hackage.haskell.org/package/mersenne-random-pure64)\n* [mersenne-random](http://hackage.haskell.org/package/mersenne-random)\n* [tf-random](http://hackage.haskell.org/package/tf-random)\n* [xorshift](http://hackage.haskell.org/package/xorshift)\n\nrandom\n---\nHaskell98\u6a19\u6e96\u306ePRNG\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002Haskell98Report\u3067\u306fAPI\u3068PRNG\u306e\u6e80\u3059\u3079\u304d\u6761\u4ef6\u3092\u898f\u5b9a\u3059\u308b\u306b\u7559\u3081\u3001\u5b9f\u88c5\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u89e6\u308c\u3066\u3044\u307e\u305b\u3093\u304c\u3001random\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u306f[1]\u306e\u65b9\u6cd5\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\u3059\u3079\u3066Haskell\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```random.hs\nimport System.Random\n\nmain :: IO ()\nmain = do\n    gen0 <- newStdGen\n    let (r1, gen1) = random gen0\n        (r1', _  ) = random gen0 -- \u540c\u3058gen\u3092\u4f7f\u7528\u3057\u3066\u540c\u3058\u578b\u3092\u751f\u6210\u3059\u308b\u3068\u7d50\u679c\u3082\u540c\u3058\n        (r2, gen2) = random gen1\n        (r3, gen3) = randomR (-100, 100) gen2\n        r4         = randoms gen3 -- \u4e71\u6570\u306e\u7121\u9650\u30ea\u30b9\u30c8\u3092\u8fd4\u3059\n    print (r1  :: Int)\n    print (r1' :: Int)\n    print (r2  :: Double) -- Double\u306e\u7bc4\u56f2\u306f[0,1)\n    print (r3  :: Int)\n    print (take 3 r4 :: [Double])\n```\n\n```.sh\n$ runhaskell examples/random.hs\n-140564301203516694\n-140564301203516694\n0.19977632985837557\n-90\n[0.4047517803031183,0.2450618611537484,0.5026396495543536]\n```\n\n\u306f\u3044\u3001\u666e\u901a\u306b\u4f7f\u3048\u307e\u3059\u306d\u3002\u57fa\u672c\u7684\u306bgen\u3092\u5f15\u6570\u3067\u6301\u3061\u56de\u3057\u3066\u4f7f\u7528\u3057\u307e\u3059\u3002\u8907\u6570\u306egen\u304c\u5fc5\u8981\u306a\u6642(\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u3068\u304b\u3001randoms\u306b\u5165\u308c\u308b\u3068\u304b)\u306fsplit\u3092\u4f7f\u7528\u3057\u3066gen\u30922\u3064\u306b\u5206\u3051\u307e\u3059\u3002\n\nmwc-random\n---\n\u30ad\u30e3\u30ea\u30fc\u4ed8\u304d\u4e57\u7b97(multiply-with-carry; MWC)\u306e\u5185\u3001lag-256 MWC\u3068\u547c\u3070\u308c\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002**\u3059\u3079\u3066Haskell\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059**\u3002\n\n[primitive](https://hackage.haskell.org/package/primitive)\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u7528\u3057\u3066\u304a\u308a\u3001IO/ST\u3092\u5171\u901a\u306e\u30b3\u30fc\u30c9\u3067\u4f7f\u7528\u3059\u308b\u4e8b\u304c\u51fa\u6765\u307e\u3059\u3002\n\n\u307e\u305a\u306fIO\u30e2\u30ca\u30c9\u3092\u4f7f\u7528\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n```mwc-io.hs\nimport System.Random.MWC\n\nmain :: IO ()\nmain = withSystemRandom . asGenIO $ \\gen -> do\n    uniform              gen >>= \\i -> print (i :: Int)\n    uniformR (-100, 100) gen >>= \\d -> print (d :: Double)\n```\n\n```.sh\n$ runhaskell examples/mwc-io.hs\n-5961215003745553123\n6.167462573191315\n```\n\n\u6b21\u306bST\u30e2\u30ca\u30c9\u3092\u4f7f\u7528\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n```mwc-st.hs\n{-# LANGUAGE NoMonomorphismRestriction #-}\nimport qualified Data.Vector.Unboxed as U\nimport Control.Applicative\nimport Control.Monad.ST(runST)\nimport System.Random.MWC\n\n -- \u6bce\u56de\u540c\u3058\u5024\u3092\u8fd4\u3059\npureA :: (Int, Double)\npureA = runST $ do\n    gen <- initialize (U.fromList [4, 8, 15, 16, 23, 42])\n    (,) <$> uniform gen <*> uniformR (-100, 100) gen\n\n -- Seed\u3092\u4f7f\u3046\u3053\u3068\u3067random\u7b49\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u771f\u4f3c\u4e8b\u3092\u51fa\u6765\u308b\npureB :: Seed -> ((Int, Double), Seed)\npureB seed = runST $ do\n    gen   <- restore seed\n    ret   <- (,) <$> uniform gen <*> uniformR (-100, 100) gen\n    seed' <- save gen\n    return (ret, seed')\n\nmain :: IO ()\nmain = do\n    print pureA\n    seed0 <- createSystemRandom >>= save\n    let (b0, seed1) = pureB seed0\n        (b1, _    ) = pureB seed1\n    print b0\n    print b1\n```\n\n```.sh\n$ runhaskell examples/mwc-st.hs\n(8017236977809806739,75.8981759359263)\n(-2290309892113622472,15.327453033603632)\n(6768560660450525899,-50.111907886352355)\n```\n\nmersenne-random-pure64\n---\n[\u30e1\u30eb\u30bb\u30f3\u30cc\u30c4\u30a4\u30b9\u30bf\u30fc(mersenne twister; MT)](http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/mt.html)\u306e\u5185\u3001MT19937-64(2004/9/29 version)\u3078\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3067\u3059\u3002\n\nRandomGen\u578b\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3057random\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u540c\u3058\u611f\u3058\u3067\u4f7f\u7528\u3059\u308b\u305f\u3081\u4f8b\u306f\u5272\u611b\u3057\u307e\u3059\u3002\n\nmersenne-random\n---\n\u3061\u3087\u3063\u3068\u53e4\u3044(<1.4)[SIMD-oriented Fast Mersenne Twister(SFMT)](http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/SFMT/index-jp.html)\u3078\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3067\u3059\u3002\n\n```mersenne.hs\nimport System.Random.Mersenne\n\nmain :: IO ()\nmain = do\n    gen <- getStdGen\n    random  gen >>= \\i -> print (i :: Int)\n    randoms gen >>= \\i -> print (take 3 i :: [Double])\n```\n\n```.sh\n$ runhaskell examples/mersenne.hs\n-619718723374138645\n[0.4551769174016148,0.30478929015057205,0.1370638521698185]\n```\n\ntf-random\n---\n[2]\u306e\u65b9\u6cd5\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\u5185\u90e8\u3067\u4f7f\u7528\u3057\u3066\u3044\u308bthreefish-256\u90e8\u5206\u306fC\u3067\u3001\u305d\u306e\u4ed6\u306e\u90e8\u5206\u306fHaskell\u3067\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n\nRandomGen\u578b\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3057random\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u540c\u3058\u611f\u3058\u3067\u4f7f\u7528\u3059\u308b\u305f\u3081\u4f8b\u306f\u5272\u611b\u3057\u307e\u3059\u3002\n\nxorshift\n---\n32/64bit\u306exorshift\u306eHaskell\u5b9f\u88c5\u3067\u3059\u3002\n\nRandomGen\u578b\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3057random\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u540c\u3058\u611f\u3058\u3067\u4f7f\u7528\u3059\u308b\u305f\u3081\u4f8b\u306f\u5272\u611b\u3057\u307e\u3059\u3002\n\n\u7279\u5fb4\n===\n\u4ee5\u4e0a\u306e\u5404PRNG\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u7279\u5fb4\u3092\u8868\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n|\u30e9\u30a4\u30d6\u30e9\u30ea             | \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0 | \u5468\u671f                 | Haskell | \u521d\u671f\u5316           | Pure            | ST | IO |\n|-----------------------|--------------|----------------------|---------|------------------|-----------------|----|----|\n|random                 | [1]          | ~2.30584e18          |   \u25ef    | CPU\u6642\u9593/\u73fe\u5728\u6642\u9593 |  \u25ef             | -  | -  |\n|mwc-random             | lag-256 MWC  | 2^8222               |   \u25ef    | /dev/urandom(\u7121\u3051\u308c\u3070CPU\u6642\u9593/\u73fe\u5728\u6642\u9593)     |  \u25b3<sup>1</sup> | \u25ef | \u25ef |\n|mersenne-random-pure64 | MT19937-64   | 2^19937 - 1          |   \u00d7    | CPU\u6642\u9593/\u73fe\u5728\u6642\u9593 |  \u25ef             | -  | -  |\n|mersenne-random        | SFMT         | 2^19937 - 1          |   \u00d7    | CPU\u6642\u9593/\u73fe\u5728\u6642\u9593 |  \u00d7             | \u00d7 | \u25ef |\n|tf-random              | [2]          | ?                    |   \u00d7    | /dev/urandom(\u7121\u3051\u308c\u3070CPU\u6642\u9593/\u73fe\u5728\u6642\u9593)     |  \u25ef             | -  | -  |\n|xorshift               | xorshift     | 2^32 - 1 or 2^64 - 1 |   \u25ef    | \u73fe\u5728\u6642\u9593         |  \u25ef             | -  | -  |\n\n* Haskell: \u7d14Haskell\u5b9f\u88c5\u304b\u5426\u304b\n* \u521d\u671f\u5316: newSystemGen\u306a\u3069\u306e\u95a2\u6570\u3067\u5185\u90e8\u72b6\u614b\u3092\u521d\u671f\u5316\u3059\u308b\u6642\u306b\u4f55\u3092\u4f7f\u7528\u3057\u3066\u521d\u671f\u5316\u3059\u308b\u304b\n* Pure: \u7d14\u7c8b\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\n* ST: STRef\u3092\u4f7f\u7528\u3057\u305f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3002\u7d14\u7c8b\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u6709\u308c\u3070\u4e0d\u8981\u306a\u306e\u3067-\u3068\u3057\u305f\u3002\n* IO: IORef\u3092\u4f7f\u7528\u3057\u305f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3002\u7d14\u7c8b\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u6709\u308c\u3070\u4e0d\u8981\u306a\u306e\u3067-\u3068\u3057\u305f\u3002\n\n\u25b3<sup>1</sup>: \u4e00\u65e6Seed\u306b\u5909\u63db\u3059\u308c\u3070\u53ef\u80fd\u3002\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u53c2\u7167\n\n\u901f\u5ea6\u6bd4\u8f03\n===\n\u7279\u306b\u30e2\u30f3\u30c6\u30ab\u30eb\u30ed\u6cd5\u306a\u3069\u5927\u91cf\u306e\u4e71\u6570\u3092\u5fc5\u8981\u3068\u3059\u308b\u624b\u6cd5\u3092\u7528\u3044\u308b\u6642\u306b\u3001\u4e71\u6570\u306e\u751f\u6210\u901f\u5ea6\u304c\u91cd\u8981\u3068\u306a\u308a\u307e\u3059\u3002\n\n1000\u500b\u306e64bit-Int\u306e\u751f\u6210\u6642\u9593\u306b\u3064\u3044\u3066\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3092\u53d6\u3063\u3066\u304a\u3044\u305f\u306e\u3067\u53c2\u8003\u306b\u306a\u308c\u3070\u3068\u601d\u3044\u307e\u3059\u3002\n\n[\u5168\u4f53](http://philopon.github.io/misc-benchmarks/random-all.html)\n[\u901f\u3044\u3082\u306e\u306e\u307f](http://philopon.github.io/misc-benchmarks/random-zoom.html)\n\nmersenne-random-pure64\u3092\u542b\u3080\u3001RandonGen\u578b\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u3082\u306e\u306f\u6bce\u56de\u5185\u90e8\u72b6\u614b\u3092\u30b3\u30d4\u30fc\u3057\u3066\u3044\u308b\u306e\u3067\u304b\u306a\u308a\u9045\u3044\u3053\u3068\u304c\u898b\u3066\u53d6\u308c\u307e\u3059(\u3064\u3089\u3044)\u3002\n\nmersenne-random\u306f\u5185\u90e8\u72b6\u614b\u3092\u6301\u3061\u56de\u3059\u306e\u3067\u9ad8\u901f\u3067\u3059\u304c\u3001IO\u30e2\u30ca\u30c9\u5185\u3067\u3057\u304b\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u305b\u3093(\u3061\u3087\u3063\u3068\u3064\u3089\u3044)\u3002\n\nmwc-random\u306f\u5168\u3066Haskell\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u306b\u3082\u95a2\u308f\u3089\u305a\u3001\u304b\u306a\u308a\u9ad8\u901f(1\u30921000\u56de\u8db3\u3059\u3060\u3051\u306ebaseline\u3068\u6bd4\u8f03\u3057\u30662.3\u500d\u7a0b\u5ea6\u306e\u6642\u9593\u3067\u6e08\u3093\u3067\u3044\u308b)\u3067\u3059\u3002\u30b9\u30b4\u30a4\uff01\n\n\n\u3069\u308c\u3092\u4f7f\u3048\u3070\u826f\u3044\u304b\n===\nPRNG\u306b\u3064\u3044\u3066\u4f59\u308a\u8a73\u3057\u304f\u306a\u3044&&\u72b6\u6cc1\u306b\u3088\u3063\u3066\u5fc5\u8981\u3068\u3055\u308c\u308b\u3082\u306e\u3082\u7570\u306a\u308b\u306e\u3067\u30a2\u30ec\u3067\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305amwc-random\u3092\u4f7f\u3063\u3066\u304a\u3051\u3070\u826f\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\nmwc-random\u306b\u306f\u4e00\u69d8\u4e71\u6570\u4ee5\u5916\u306b\u3082\u69d8\u3005\u306a\u5206\u5e03\u306e\u4e71\u6570\u3092\u751f\u6210\u3059\u308b\u6a5f\u80fd\u3082\u3042\u308a\u3001\u305d\u3061\u3089\u3082\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u4fbf\u5229\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3067\u3082\u30e1\u30eb\u30bb\u30f3\u30cc\u30c4\u30a4\u30b9\u30bf\u30fc\u4f7f\u3044\u305f\u3044\n===\n\u3068\u601d\u3044\u307e\u3057\u3066\u3001\u4eca\u98a8\u306a(mwc-random\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9<del>\u3092\u30d1\u30af\u3063\u305f</del>\u306b\u5408\u308f\u305b\u305f)SFMT\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u4f5c\u308a\u307e\u3057\u305f\uff01\u3088\u308d\u3057\u3051\u308c\u3070\u304a\u4f7f\u3044\u4e0b\u3055\u3044\u3002\n\n|\u30e9\u30a4\u30d6\u30e9\u30ea                                      | \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0 | \u5468\u671f                 | Haskell | \u521d\u671f\u5316           | Pure            | ST | IO |\n|-----------------------------------------------|--------------|----------------------|---------|------------------|-----------------|----|----|\n|[sfmt](http://hackage.haskell.org/package/sfmt)| SFMT(1.4.1)  | 2^19937 - 1          |   \u00d7    | entropy(\u5f8c\u8ff0)    |  \u25b3<sup>1</sup> | \u25ef | \u25ef |\n\n[\u30d9\u30f3\u30c1\u30de\u30fc\u30af](http://philopon.github.io/misc-benchmarks/random-new.html)\n\nCSPRNG\u306b\u3064\u3044\u3066\n===\n\u3055\u3066\u3001\u3053\u3053\u307e\u3067\u306fPRNG\u306e\u8a71\u3002\u3053\u3053\u304b\u3089\u5c11\u3057CSPRNG\u306e\u8a71\u306b\u79fb\u308a\u307e\u3057\u3087\u3046\u3002\u66f4\u306b\u8a73\u3057\u304f\u306a\u3044\u4e0a\u306b\u7279\u306b\u9078\u629e\u80a2\u304c\u5e83\u3044\u8a33\u3067\u3082\u7121\u3044\u306e\u3067\u5217\u6319\u3059\u308b\u3060\u3051\u306b\u306a\u308a\u307e\u3059\u304c\u3054\u5bb9\u8d66\u304f\u3060\u3055\u3044\u3002\n\nHaskell\u3067\u6697\u53f7\u8ad6\u7684\u306a\u4e71\u6570\u3092\u6271\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3053\u308c\u3089\u4f4d\u304b\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n\n* [entropy](http://hackage.haskell.org/package/entropy)/[crypto-random](http://hackage.haskell.org/package/crypto-random)\n* [cprng-aes](http://hackage.haskell.org/package/cprng-aes)\n* [threefish](http://hackage.haskell.org/package/threefish)\n\nentropy/crypto-random\n---\n*nix\u306e/dev/urandom\u3084Windows\u306eCryptoAPI\u7b49\u304b\u3089\u4e71\u6570\u3092\u53d6\u5f97\u3059\u308b\u70ba\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u6bce\u306e\u30b3\u30fc\u30c9\u66f8\u304f\u306e\u82e6\u75db\u3067\u3057\u304b\u306a\u3044\u306e\u3067/dev/urandom\u3068\u304b\u76f4\u63a5\u89e6\u308b\u5fc5\u8981\u304c\u3042\u308b\u306a\u3089\u3053\u308c\u3089\u3092\u4f7f\u3063\u305f\u65b9\u304c\u5e78\u305b\u306b\u306a\u308c\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\ncprng-aes\n---\naes\u3092\u4f7f\u7528\u3057\u3066 [\u6697\u53f7\u8ad6\u7684\u64ec\u4f3c\u4e71\u6570\u751f\u6210\u5668 - \u6697\u53f7\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u306b\u57fa\u3065\u304f\u8a2d\u8a08 - Wikipedia](http://ja.wikipedia.org/wiki/\u6697\u53f7\u8ad6\u7684\u64ec\u4f3c\u4e71\u6570\u751f\u6210\u5668#.E6.9A.97.E5.8F.B7.E3.83.97.E3.83.AA.E3.83.9F.E3.83.86.E3.82.A3.E3.83.96.E3.81.AB.E5.9F.BA.E3.81.A5.E3.81.8F.E8.A8.AD.E8.A8.88)\u306e\u65b9\u6cd5\u3067CSPRNG\u3092\u69cb\u6210\u3057\u3066\u3044\u307e\u3059\u3002crypto-random\u306eAPI\u3067\u521d\u671f\u72b6\u614b\u3092\u751f\u6210\u3057\u30011MB\u6bce\u306bre-seed\u3092\u884c\u3063\u3066\u304a\u308a\u307e\u3059\u3002\nyesod\u304c\u6a19\u6e96\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\u306b\u4f7f\u7528\u3057\u3066\u308b[clientsession](http://hackage.haskell.org/package/clientsession)\u7b49\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nthreefish\n---\n\u89e6\u3063\u305f\u4e8b\u7121\u3044\u306e\u3067\u8aac\u660e\u306f\u5272\u611b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3059\u3002\u30b9\u30df\u30de\u30bb\u30f3\u3002\u3002\u3002\u3053\u3093\u306a\u306e\u3082\u6709\u308b\u3088\u30fc\u3063\u3066\u4e8b\u3067\u3002\u3002\u3002\n\n\u304a\u308f\u308a\u306b\n===\n\u3059\u3054\u3044\u5c3b\u3059\u307c\u307f\u3067\u3059\u307f\u307e\u305b\u3093\u3002\u3002\u3002\n\u8efd\u3044\u6c17\u6301\u3061\u3067PRNG\u306e\u8a18\u4e8b\u3067\u3082\u66f8\u3053\u3046\u3068\u3057\u305f\u7d50\u679c\u304c\u30b3\u30ec\u3060\u3088\uff01\uff01\uff01\n\n\u53c2\u8003\u6587\u732e\n===\n\n[1] Pierre L'Ecuyer, Efficient and portable combined random number generators, Comm ACM, 31(6), Jun 1988, pp742-749. \n\n[2] Koen Claessen and Micha\u0142 H. Pa\u0142ka, Splittable Pseudorandom Number Generators Using Cryptographic Hashing by Claessen, Haskell Symposium 2013, Sep 2013\n", "coediting": false, "comments_count": 1, "created_at": "2014-12-09T21:03:37+09:00", "group": null, "id": "8f647fc8dafe66b7381b", "likes_count": 37, "private": false, "reactions_count": 0, "tags": [{"name": "Haskell", "versions": []}], "title": "Haskell\u306e\u4e71\u6570\u4e8b\u60c5", "updated_at": "2014-12-12T04:04:37+09:00", "url": "https://qiita.com/philopon/items/8f647fc8dafe66b7381b", "user": {"description": "", "facebook_id": "", "followees_count": 4, "followers_count": 48, "github_login_name": null, "id": "philopon", "items_count": 18, "linkedin_id": "", "location": "", "name": "", "organization": "", "permanent_id": 33562, "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/33562/profile-images/1473686152", "team_only": false, "twitter_screen_name": null, "website_url": "http://philopon.github.io"}, "page_views_count": null}