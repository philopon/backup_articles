{"rendered_body": "<p>2014.07.06\u8ffd\u8a18<br>\nRecordWildCards\u3068NamedFieldPuns\u304c\u9006\u306b\u306a\u3063\u3066\u3044\u305f\u306e\u3092\u4fee\u6b63(thx <a href=\"http://qiita.com/fujimura\">fujimura</a>)\u3002<br>\n--\u3061\u3083\u3093\u3068\u78ba\u8a8d\u305b\u306d\u3070</p>\n\n<p>2015.03.30 \u8ffd\u8a18<br>\nghc-7.10!</p>\n\n<h1>\n<span id=\"\u306f\u3058\u3081\u306b\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>\u306f\u3058\u3081\u306b</h1>\n\n<p>ghc-7.10.1\u73fe\u5728\u3001ghc\u8a00\u8a9e\u62e1\u5f35\u306f99\u500b(!!)\u3042\u308a\u307e\u3059\u3002<br>\n\u3053\u306e\u4e2d\u3088\u308a\u8f9b\u3044\u8868\u8a18\u304b\u3089\u89e3\u653e\u3057\u3066\u304f\u308c\u308b\u3082\u306e\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002</p>\n\n<div class=\"code-frame\" data-lang=\"bash\"><div class=\"highlight\"><pre>ghci <span class=\"nt\">-package</span> ghc\nGHCi, version 7.10.1: http://www.haskell.org/ghc/  :? <span class=\"k\">for </span><span class=\"nb\">help\n</span>Prelude&gt; :m DynFlags\nPrelude DynFlags&gt; length DynFlags.xFlags\n99\nPrelude DynFlags&gt; mapM_ <span class=\"o\">(</span>putStrLn <span class=\"nb\">.</span> flagSpecName<span class=\"o\">)</span> DynFlags.xFlags\nAllowAmbiguousTypes\nAlternativeLayoutRule\nAlternativeLayoutRuleTransitional\nArrows\nAutoDeriveTypeable\nBangPatterns\nBinaryLiterals\nCApiFFI\nCPP\nConstrainedClassMethods\nConstraintKinds\nDataKinds\nDatatypeContexts\nDefaultSignatures\nDeriveAnyClass\nDeriveDataTypeable\nDeriveFoldable\nDeriveFunctor\nDeriveGeneric\nDeriveTraversable\nDisambiguateRecordFields\nDoAndIfThenElse\nDoRec\nEmptyCase\nEmptyDataDecls\nExistentialQuantification\nExplicitForAll\nExplicitNamespaces\nExtendedDefaultRules\nFlexibleContexts\nFlexibleInstances\nForeignFunctionInterface\nFunctionalDependencies\nGADTSyntax\nGADTs\nGHCForeignImportPrim\nGeneralizedNewtypeDeriving\nImplicitParams\nImplicitPrelude\nImpredicativeTypes\nIncoherentInstances\nInstanceSigs\nInterruptibleFFI\nJavaScriptFFI\nKindSignatures\nLambdaCase\nLiberalTypeSynonyms\nMagicHash\nMonadComprehensions\nMonoLocalBinds\nMonoPatBinds\nMonomorphismRestriction\nMultiParamTypeClasses\nMultiWayIf\nNPlusKPatterns\nNamedFieldPuns\nNamedWildCards\nNegativeLiterals\nNondecreasingIndentation\nNullaryTypeClasses\nNumDecimals\nOverlappingInstances\nOverloadedLists\nOverloadedStrings\nPackageImports\nParallelArrays\nParallelListComp\nPartialTypeSignatures\nPatternGuards\nPatternSignatures\nPatternSynonyms\nPolyKinds\nPolymorphicComponents\nPostfixOperators\nQuasiQuotes\nRank2Types\nRankNTypes\nRebindableSyntax\nRecordPuns\nRecordWildCards\nRecursiveDo\nRelaxedLayout\nRelaxedPolyRec\nRoleAnnotations\nScopedTypeVariables\nStandaloneDeriving\nStaticPointers\nTemplateHaskell\nTraditionalRecordSyntax\nTransformListComp\nTupleSections\nTypeFamilies\nTypeOperators\nTypeSynonymInstances\nUnboxedTuples\nUndecidableInstances\nUnicodeSyntax\nUnliftedFFITypes\nViewPatterns\n</pre></div></div>\n\n<p>ghc-7.8\u304b\u3089\u5897\u3048\u305f\u306e\u306f</p>\n\n<ul>\n<li>BinaryLiterals</li>\n<li>DeriveAnyClass</li>\n<li>NamedWildCards</li>\n<li>PartialTypeSignatures</li>\n<li>StaticPointers</li>\n</ul>\n\n<p>\u306e5\u3064\u3067\u3059\u3002</p>\n\n<h1>\n<span id=\"tuplesections\" class=\"fragment\"></span><a href=\"#tuplesections\"><i class=\"fa fa-link\"></i></a>TupleSections</h1>\n\n<p>\u306a\u3057</p>\n\n<div class=\"code-frame\" data-lang=\"hs\"><div class=\"highlight\"><pre><span class=\"p\">(</span><span class=\"nf\">\\</span><span class=\"n\">a</span> <span class=\"o\">-&gt;</span> <span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"sc\">'b'</span><span class=\"p\">,</span><span class=\"sc\">'c'</span><span class=\"p\">))</span>\n</pre></div></div>\n\n<p>\u3042\u308a</p>\n\n<div class=\"code-frame\" data-lang=\"hs\"><div class=\"highlight\"><pre><span class=\"p\">(,</span><span class=\"sc\">'b'</span><span class=\"p\">,</span><span class=\"sc\">'c'</span><span class=\"p\">)</span>\n</pre></div></div>\n\n<h1>\n<span id=\"namedfieldpuns\" class=\"fragment\"></span><a href=\"#namedfieldpuns\"><i class=\"fa fa-link\"></i></a>NamedFieldPuns</h1>\n\n<p>\u306a\u3057</p>\n\n<div class=\"code-frame\" data-lang=\"hs\"><div class=\"highlight\"><pre><span class=\"n\">aXb</span> <span class=\"kt\">T</span> <span class=\"p\">{</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">b</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"n\">a</span> <span class=\"o\">*</span> <span class=\"n\">b</span>\n</pre></div></div>\n\n<p>\u3042\u308a</p>\n\n<div class=\"code-frame\" data-lang=\"hs\"><div class=\"highlight\"><pre><span class=\"n\">aXb</span> <span class=\"kt\">T</span> <span class=\"p\">{</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"n\">a</span> <span class=\"o\">*</span> <span class=\"n\">b</span>\n</pre></div></div>\n\n<h1>\n<span id=\"recordwildcards\" class=\"fragment\"></span><a href=\"#recordwildcards\"><i class=\"fa fa-link\"></i></a>RecordWildCards</h1>\n\n<p>\u306a\u3057</p>\n\n<div class=\"code-frame\" data-lang=\"hs\"><div class=\"highlight\"><pre><span class=\"n\">aXb</span> <span class=\"kt\">T</span> <span class=\"p\">{</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">b</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"n\">a</span> <span class=\"o\">*</span> <span class=\"n\">b</span>\n</pre></div></div>\n\n<p>\u3042\u308a</p>\n\n<div class=\"code-frame\" data-lang=\"hs\"><div class=\"highlight\"><pre><span class=\"n\">aXb</span> <span class=\"kt\">T</span> <span class=\"p\">{</span><span class=\"o\">..</span><span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"n\">a</span> <span class=\"o\">*</span> <span class=\"n\">b</span>\n</pre></div></div>\n\n<h1>\n<span id=\"lambdacase\" class=\"fragment\"></span><a href=\"#lambdacase\"><i class=\"fa fa-link\"></i></a>LambdaCase</h1>\n\n<p>\u306a\u3057</p>\n\n<div class=\"code-frame\" data-lang=\"hs\"><div class=\"highlight\"><pre><span class=\"nf\">\\</span><span class=\"n\">a</span> <span class=\"o\">-&gt;</span> <span class=\"kr\">case</span> <span class=\"n\">a</span> <span class=\"kr\">of</span>\n    <span class=\"o\">...</span>\n</pre></div></div>\n\n<p>\u3042\u308a</p>\n\n<div class=\"code-frame\" data-lang=\"hs\"><div class=\"highlight\"><pre><span class=\"nf\">\\</span><span class=\"kr\">case</span>\n    <span class=\"o\">...</span>\n</pre></div></div>\n\n<h1>\n<span id=\"multiwayif\" class=\"fragment\"></span><a href=\"#multiwayif\"><i class=\"fa fa-link\"></i></a>MultiWayIf</h1>\n\n<p>\u306a\u3057</p>\n\n<div class=\"code-frame\" data-lang=\"hs\"><div class=\"highlight\"><pre><span class=\"nf\">\\</span><span class=\"n\">a</span> <span class=\"o\">-&gt;</span> <span class=\"kr\">if</span> <span class=\"n\">a</span> <span class=\"p\">`</span><span class=\"n\">mod</span><span class=\"p\">`</span> <span class=\"mi\">15</span> <span class=\"o\">==</span> <span class=\"mi\">0</span>\n      <span class=\"kr\">then</span> <span class=\"s\">\"fizzbuzz\"</span>\n      <span class=\"kr\">else</span> <span class=\"kr\">if</span> <span class=\"n\">a</span> <span class=\"p\">`</span><span class=\"n\">mod</span><span class=\"p\">`</span> <span class=\"mi\">3</span> <span class=\"o\">==</span> <span class=\"mi\">0</span>\n           <span class=\"kr\">then</span> <span class=\"s\">\"fizz\"</span>\n           <span class=\"kr\">else</span> <span class=\"kr\">if</span> <span class=\"n\">a</span> <span class=\"p\">`</span><span class=\"n\">mod</span><span class=\"p\">`</span> <span class=\"mi\">5</span> <span class=\"o\">==</span> <span class=\"mi\">0</span>\n                <span class=\"kr\">then</span> <span class=\"s\">\"buzz\"</span>\n                <span class=\"kr\">else</span> <span class=\"n\">show</span> <span class=\"n\">a</span>\n</pre></div></div>\n\n<p>\u3042\u308a</p>\n\n<div class=\"code-frame\" data-lang=\"hs\"><div class=\"highlight\"><pre><span class=\"nf\">\\</span><span class=\"n\">a</span> <span class=\"o\">-&gt;</span> <span class=\"kr\">if</span>\n    <span class=\"o\">|</span> <span class=\"n\">a</span> <span class=\"p\">`</span><span class=\"n\">mod</span><span class=\"p\">`</span> <span class=\"mi\">15</span> <span class=\"o\">==</span> <span class=\"mi\">0</span> <span class=\"o\">-&gt;</span> <span class=\"s\">\"fizzbuzz\"</span>\n    <span class=\"o\">|</span> <span class=\"n\">a</span> <span class=\"p\">`</span><span class=\"n\">mod</span><span class=\"p\">`</span>  <span class=\"mi\">3</span> <span class=\"o\">==</span> <span class=\"mi\">0</span> <span class=\"o\">-&gt;</span> <span class=\"s\">\"fizz\"</span>\n    <span class=\"o\">|</span> <span class=\"n\">a</span> <span class=\"p\">`</span><span class=\"n\">mod</span><span class=\"p\">`</span>  <span class=\"mi\">5</span> <span class=\"o\">==</span> <span class=\"mi\">0</span> <span class=\"o\">-&gt;</span> <span class=\"s\">\"buzz\"</span>\n    <span class=\"o\">|</span> <span class=\"n\">otherwise</span>       <span class=\"o\">-&gt;</span> <span class=\"n\">show</span> <span class=\"n\">a</span>\n</pre></div></div>\n\n<h1>\n<span id=\"binaryliterals\" class=\"fragment\"></span><a href=\"#binaryliterals\"><i class=\"fa fa-link\"></i></a>BinaryLiterals</h1>\n\n<p>ghc-7.10\u4ee5\u964d</p>\n\n<p>\u3042\u308a</p>\n\n<div class=\"code-frame\" data-lang=\"haskell\">\n<div class=\"code-lang\"><span class=\"bold\">ghci.hs</span></div>\n<div class=\"highlight\"><pre><span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"n\">b0101101</span>\n<span class=\"mi\">45</span>\n</pre></div>\n</div>\n\n<h1>\n<span id=\"\u304a\u308f\u308a\u306b\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>\u304a\u308f\u308a\u306b</h1>\n\n<p>\u3053\u3061\u3089\u304b\u3089\u306f\u4ee5\u4e0a\u3067\u3059\u3002</p>\n", "body": "2014.07.06\u8ffd\u8a18\nRecordWildCards\u3068NamedFieldPuns\u304c\u9006\u306b\u306a\u3063\u3066\u3044\u305f\u306e\u3092\u4fee\u6b63(thx [fujimura](http://qiita.com/fujimura))\u3002\n--\u3061\u3083\u3093\u3068\u78ba\u8a8d\u305b\u306d\u3070\n\n2015.03.30 \u8ffd\u8a18\nghc-7.10!\n\n\u306f\u3058\u3081\u306b\n===\nghc-7.10.1\u73fe\u5728\u3001ghc\u8a00\u8a9e\u62e1\u5f35\u306f99\u500b(!!)\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u4e2d\u3088\u308a\u8f9b\u3044\u8868\u8a18\u304b\u3089\u89e3\u653e\u3057\u3066\u304f\u308c\u308b\u3082\u306e\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n```bash\nghci -package ghc\nGHCi, version 7.10.1: http://www.haskell.org/ghc/  :? for help\nPrelude> :m DynFlags\nPrelude DynFlags> length DynFlags.xFlags\n99\nPrelude DynFlags> mapM_ (putStrLn . flagSpecName) DynFlags.xFlags\nAllowAmbiguousTypes\nAlternativeLayoutRule\nAlternativeLayoutRuleTransitional\nArrows\nAutoDeriveTypeable\nBangPatterns\nBinaryLiterals\nCApiFFI\nCPP\nConstrainedClassMethods\nConstraintKinds\nDataKinds\nDatatypeContexts\nDefaultSignatures\nDeriveAnyClass\nDeriveDataTypeable\nDeriveFoldable\nDeriveFunctor\nDeriveGeneric\nDeriveTraversable\nDisambiguateRecordFields\nDoAndIfThenElse\nDoRec\nEmptyCase\nEmptyDataDecls\nExistentialQuantification\nExplicitForAll\nExplicitNamespaces\nExtendedDefaultRules\nFlexibleContexts\nFlexibleInstances\nForeignFunctionInterface\nFunctionalDependencies\nGADTSyntax\nGADTs\nGHCForeignImportPrim\nGeneralizedNewtypeDeriving\nImplicitParams\nImplicitPrelude\nImpredicativeTypes\nIncoherentInstances\nInstanceSigs\nInterruptibleFFI\nJavaScriptFFI\nKindSignatures\nLambdaCase\nLiberalTypeSynonyms\nMagicHash\nMonadComprehensions\nMonoLocalBinds\nMonoPatBinds\nMonomorphismRestriction\nMultiParamTypeClasses\nMultiWayIf\nNPlusKPatterns\nNamedFieldPuns\nNamedWildCards\nNegativeLiterals\nNondecreasingIndentation\nNullaryTypeClasses\nNumDecimals\nOverlappingInstances\nOverloadedLists\nOverloadedStrings\nPackageImports\nParallelArrays\nParallelListComp\nPartialTypeSignatures\nPatternGuards\nPatternSignatures\nPatternSynonyms\nPolyKinds\nPolymorphicComponents\nPostfixOperators\nQuasiQuotes\nRank2Types\nRankNTypes\nRebindableSyntax\nRecordPuns\nRecordWildCards\nRecursiveDo\nRelaxedLayout\nRelaxedPolyRec\nRoleAnnotations\nScopedTypeVariables\nStandaloneDeriving\nStaticPointers\nTemplateHaskell\nTraditionalRecordSyntax\nTransformListComp\nTupleSections\nTypeFamilies\nTypeOperators\nTypeSynonymInstances\nUnboxedTuples\nUndecidableInstances\nUnicodeSyntax\nUnliftedFFITypes\nViewPatterns\n```\n\nghc-7.8\u304b\u3089\u5897\u3048\u305f\u306e\u306f\n\n* BinaryLiterals\n* DeriveAnyClass\n* NamedWildCards\n* PartialTypeSignatures\n* StaticPointers\n\n\u306e5\u3064\u3067\u3059\u3002\n\nTupleSections\n===\n\u306a\u3057\n\n```hs\n(\\a -> (a,'b','c'))\n```\n\n\u3042\u308a\n\n```hs\n(,'b','c')\n```\n\nNamedFieldPuns\n===\n\n\u306a\u3057\n\n```hs\naXb T { a = a, b = b } = a * b\n```\n\n\u3042\u308a\n\n```hs\naXb T { a, b } = a * b\n```\n\nRecordWildCards\n===\n\n\u306a\u3057\n\n```hs\naXb T { a = a, b = b } = a * b\n```\n\n\u3042\u308a\n\n```hs\naXb T {..} = a * b\n```\n\nLambdaCase\n===\n\n\u306a\u3057\n\n```hs\n\\a -> case a of\n    ...\n```\n\n\u3042\u308a\n\n```hs\n\\case\n    ...\n```\n\nMultiWayIf\n===\n\n\u306a\u3057\n\n```hs\n\\a -> if a `mod` 15 == 0\n      then \"fizzbuzz\"\n      else if a `mod` 3 == 0\n           then \"fizz\"\n           else if a `mod` 5 == 0\n                then \"buzz\"\n                else show a\n```\n\n\u3042\u308a\n\n```hs\n\\a -> if\n    | a `mod` 15 == 0 -> \"fizzbuzz\"\n    | a `mod`  3 == 0 -> \"fizz\"\n    | a `mod`  5 == 0 -> \"buzz\"\n    | otherwise       -> show a\n```\n\nBinaryLiterals\n===\nghc-7.10\u4ee5\u964d\n\n\u3042\u308a\n\n```ghci.hs\n> 0b0101101\n45\n```\n\n\u304a\u308f\u308a\u306b\n===\n\u3053\u3061\u3089\u304b\u3089\u306f\u4ee5\u4e0a\u3067\u3059\u3002\n", "coediting": false, "comments_count": 0, "created_at": "2014-07-05T00:31:49+09:00", "group": null, "id": "b812e43128654245e42d", "likes_count": 69, "private": false, "reactions_count": 0, "tags": [{"name": "Haskell", "versions": []}, {"name": "ghc", "versions": ["7.10"]}], "title": "Haskell\u306e\u8868\u8a18\u3092\u697d\u306b\u3059\u308b6\u3064\u306eghc\u62e1\u5f35", "updated_at": "2015-03-30T03:16:38+09:00", "url": "https://qiita.com/philopon/items/b812e43128654245e42d", "user": {"description": "", "facebook_id": "", "followees_count": 4, "followers_count": 48, "github_login_name": null, "id": "philopon", "items_count": 18, "linkedin_id": "", "location": "", "name": "", "organization": "", "permanent_id": 33562, "profile_image_url": "https://qiita-image-store.s3.amazonaws.com/0/33562/profile-images/1473686152", "team_only": false, "twitter_screen_name": null, "website_url": "http://philopon.github.io"}, "page_views_count": null}